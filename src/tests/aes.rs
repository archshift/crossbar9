use gfx;
use io::aes;

static KEY: &[u8] = &[0x12, 0x34, 0x56, 0x78, 0x90, 0xab, 0xcd, 0xef, 0xde, 0xad, 0xb0, 0x0f, 0xab, 0xba, 0xbe, 0xeb];
static IV: &[u8] = &[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];

static TEXT: &[u8] = b"I'm just going to input 32 chars";
static ENCRYPTED: &[u8] = &[0xda, 0x34, 0x86, 0xee, 0xad, 0x3a, 0x75, 0x68, 0x61, 0x23, 0x67, 0x69,
                            0x5a, 0x59, 0xa9, 0x38, 0x64, 0xf2, 0x75, 0xf4, 0x60, 0x05, 0xa0, 0xb4,
                            0x11, 0x3b, 0x55, 0xf6, 0xbd, 0x31, 0x3d, 0xd1];

pub fn main() {
    gfx::clear_screen(0xFF, 0xFF, 0xFF);

    let mut buf = [0u8;32];

    gfx::log(b"Starting AES-CBC encryption... ");
    buf.copy_from_slice(TEXT);
    aes::crypt_cbc128(KEY, IV, &mut buf[..], aes::Direction::Encrypt);
    if &buf[..] == ENCRYPTED {
        gfx::log(b"SUCCEEDED!\n");
    } else {
        gfx::log(b"FAILED!\n");
    }

    gfx::log(b"Starting AES-CBC decryption... ");
    buf.copy_from_slice(ENCRYPTED);
    aes::crypt_cbc128(KEY, IV, &mut buf[..], aes::Direction::Decrypt);
    if &buf[..] == TEXT {
        gfx::log(b"SUCCEEDED!\n");
    } else {
        gfx::log(b"FAILED!\n");
    }
}