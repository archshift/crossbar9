use gfx;
use io::aes;

pub mod normal {
    pub static KEY: &[u8] = &[0x12, 0x34, 0x56, 0x78, 0x90, 0xab, 0xcd, 0xef, 0xde, 0xad, 0xb0, 0x0f, 0xab, 0xba, 0xbe, 0xeb];
    pub static IV: &[u8] = &[0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00];

    pub static TEXT: &[u8] = b"I'm just going to input 32 chars";
    pub static ENCRYPTED: &[u8] = &[0xda, 0x34, 0x86, 0xee, 0xad, 0x3a, 0x75, 0x68, 0x61, 0x23, 0x67, 0x69,
                                    0x5a, 0x59, 0xa9, 0x38, 0x64, 0xf2, 0x75, 0xf4, 0x60, 0x05, 0xa0, 0xb4,
                                    0x11, 0x3b, 0x55, 0xf6, 0xbd, 0x31, 0x3d, 0xd1];
}

pub mod keypair {
    pub static KEYX: &[u8] = &[0xd2, 0x2f, 0x5e, 0x15, 0xee, 0xfb, 0x12, 0x0d, 0x50, 0xf7, 0x6b, 0xbc, 0x76, 0x1a, 0x8f, 0x41];
    pub static KEYY: &[u8] = &[0xe7, 0x1c, 0x6c, 0x13, 0xe8, 0x0e, 0x40, 0x70, 0x1c, 0x1f, 0x03, 0x11, 0x14, 0x8b, 0x73, 0x8b];
    pub static NORM_KEY: &[u8] = &[0xde, 0x95, 0x19, 0xe2, 0x8b, 0x67, 0xcd, 0x7e, 0xf7, 0x8c, 0xf0, 0x06, 0x26, 0xb1, 0x04, 0x1f];
    pub static IV: &[u8] = &[0x4a, 0x25, 0x3b, 0xd1, 0x0a, 0xf1, 0x4a, 0xc4, 0x7c, 0xfd, 0xae, 0xf8, 0x20, 0xbe, 0x56, 0x58];

    pub static TEXT: &[u8] = b"I'm just going to input 32 chars";
    pub static ENCRYPTED: &[u8] = &[0xf2, 0xa2, 0x4e, 0x2b, 0xba, 0x56, 0x67, 0xa0, 0x56, 0x3c, 0x4d, 0xf8,
                                    0xca, 0xa6, 0x84, 0x63, 0xc1, 0xcf, 0x2f, 0x8f, 0xcf, 0x1e, 0x86, 0x3d,
                                    0x10, 0x9e, 0x51, 0x94, 0x7a, 0xf3, 0x5a, 0xe7];
}

pub fn main() {
    gfx::clear_screen(0xFF, 0xFF, 0xFF);

    let mut buf = [0u8;32];

    gfx::log(b"Starting AES-CBC encryption (normal, 0-iv)... ");
    buf.copy_from_slice(normal::TEXT);
    aes::crypt_cbc128(normal::KEY, None, normal::IV, &mut buf[..], aes::Direction::Encrypt);
    if &buf[..] == normal::ENCRYPTED {
        gfx::log(b"SUCCEEDED!\n");
    } else {
        gfx::log(b"FAILED!\n");
    }

    gfx::log(b"Starting AES-CBC decryption (normal, 0-iv)... ");
    buf.copy_from_slice(normal::ENCRYPTED);
    aes::crypt_cbc128(normal::KEY, None, normal::IV, &mut buf[..], aes::Direction::Decrypt);
    if &buf[..] == normal::TEXT {
        gfx::log(b"SUCCEEDED!\n");
    } else {
        gfx::log(b"FAILED!\n");
    }

    gfx::log(b"Starting AES-CBC encryption (keypair)... ");
    buf.copy_from_slice(keypair::TEXT);
    aes::crypt_cbc128(keypair::KEYX, Some(keypair::KEYY), keypair::IV, &mut buf[..], aes::Direction::Encrypt);

    if &buf[..] == keypair::ENCRYPTED {
        gfx::log(b"SUCCEEDED!\n");
    } else {
        gfx::log(b"FAILED!\n");
    }
}