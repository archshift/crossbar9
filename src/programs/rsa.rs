use u2N::*;

use gfx;
use io::rsa;

static MODULUS: &[u8] = &[0xa6, 0x78, 0x5d, 0x0f, 0xdb, 0x8c, 0x10, 0x10, 0x41, 0x60, 0xa3, 0x42,
                    0x1d, 0xe8, 0xcb, 0xf9, 0xdf, 0x1e, 0xd4, 0x58, 0x29, 0xb9, 0x61, 0xc7, 0x07,
                    0x34, 0x8d, 0xac, 0x6a, 0xa4, 0x7a, 0xf8, 0x7e, 0x71, 0x87, 0xa5, 0x2d, 0xd8,
                    0x3c, 0x49, 0x59, 0xed, 0x1e, 0xc5, 0xdc, 0x92, 0x41, 0x49, 0x05, 0x40, 0x36,
                    0x91, 0xc1, 0x8e, 0x67, 0x89, 0xed, 0x29, 0xcd, 0xc2, 0x9d, 0xbc, 0x36, 0x4b,
                    0x19, 0xc4, 0x79, 0xdb, 0x54, 0x99, 0x91, 0x90, 0x64, 0x7d, 0xe4, 0xab, 0x77,
                    0xd9, 0xf9, 0x25, 0x30, 0xa0, 0xb0, 0x87, 0x9e, 0x08, 0xd6, 0x4c, 0xcf, 0x4b,
                    0x5e, 0x4b, 0x3a, 0xa0, 0x87, 0xfe, 0xf2, 0xb2, 0xca, 0xce, 0x49, 0xee, 0xa3,
                    0x9f, 0x53, 0xb1, 0xa5, 0xba, 0xd4, 0x82, 0xb4, 0xa4, 0x26, 0xab, 0xa0, 0xfe,
                    0xe3, 0xd9, 0xa5, 0x7e, 0x3b, 0xd9, 0xf3, 0x9d, 0x37, 0x31, 0xad, 0x9d, 0x31,
                    0xc9, 0x6a, 0x43, 0x1b, 0xc0, 0x36, 0xb3, 0x23, 0xc7, 0xd2, 0xb8, 0xc2, 0xdb,
                    0x91, 0x95, 0xd2, 0xa2, 0x22, 0xbb, 0xe3, 0x24, 0x6e, 0xd3, 0x9e, 0xff, 0xd0,
                    0xe3, 0xcc, 0xe0, 0xbe, 0x53, 0x84, 0x5d, 0xde, 0x34, 0x47, 0xb6, 0xf0, 0x53,
                    0x5e, 0x49, 0x73, 0xbf, 0x94, 0x81, 0xcf, 0x20, 0x32, 0xde, 0x8e, 0xdc, 0x39,
                    0xbf, 0x30, 0x34, 0x33, 0x4b, 0xd7, 0xe4, 0xc6, 0x06, 0xc1, 0x24, 0x60, 0x2f,
                    0xc5, 0xb4, 0x52, 0x9c, 0xb6, 0xf3, 0x86, 0xd3, 0xc9, 0x5e, 0x1e, 0xea, 0x0a,
                    0xc8, 0x74, 0x70, 0x10, 0xcf, 0x5b, 0xf2, 0xe1, 0xfb, 0x8e, 0xeb, 0x8b, 0xa5,
                    0x1b, 0xee, 0x8b, 0xb2, 0xab, 0x1d, 0xd6, 0x82, 0x24, 0xf2, 0x8f, 0x8c, 0x65,
                    0x5b, 0x6a, 0x53, 0xb6, 0xff, 0xf8, 0x43, 0x6e, 0xcc, 0x23, 0x6f, 0xbb, 0xb7,
                    0xcb, 0x10, 0xfc, 0xe2, 0xbb, 0x1f, 0x9c, 0x8c, 0x56, 0xad];
static PUBKEY: &[u8] = &[0x01, 0x00, 0x01];
static PRIVKEY: &[u8] = &[0x84, 0x65, 0x11, 0xce, 0x7c, 0xd3, 0xa6, 0x2a, 0xe7, 0x74, 0x0e, 0x23,
                0x95, 0x5a, 0x02, 0x6f, 0xd5, 0xcd, 0xd5, 0x1f, 0xd0, 0xff, 0x49, 0x0e, 0x5b,
                0x62, 0xa6, 0x92, 0x4b, 0xb6, 0x48, 0xbe, 0xbd, 0x01, 0x59, 0xda, 0x3a, 0xdd,
                0xd1, 0x04, 0x9d, 0x6a, 0x82, 0xa0, 0xe6, 0x4d, 0xc3, 0x72, 0x69, 0xa4, 0xaa,
                0x41, 0xbd, 0xe8, 0x9d, 0xdc, 0x0a, 0x2c, 0xc7, 0x22, 0x53, 0x04, 0xcf, 0x41,
                0x67, 0x5a, 0xe5, 0x77, 0x54, 0x8f, 0x56, 0x3f, 0xba, 0x4c, 0x8d, 0xc2, 0xf9,
                0x6c, 0xf8, 0x43, 0x65, 0xab, 0x46, 0xfa, 0x74, 0xeb, 0x9e, 0x54, 0x34, 0x41,
                0x42, 0xdb, 0x1d, 0xe3, 0x72, 0x85, 0x87, 0x4c, 0x3f, 0x13, 0x55, 0xa5, 0x5f,
                0xa8, 0x65, 0x8d, 0xd1, 0xbb, 0x07, 0x2c, 0x74, 0xb2, 0x60, 0xb6, 0xfb, 0x31,
                0xfc, 0xd0, 0xaa, 0x57, 0xfd, 0x0d, 0xd8, 0x3c, 0x5f, 0x1b, 0x39, 0x71, 0x94,
                0xd3, 0xa0, 0xf6, 0x0c, 0x56, 0x2c, 0xfb, 0xa5, 0x64, 0x2d, 0xf1, 0xa9, 0x04,
                0x62, 0xe3, 0xcf, 0xc4, 0x40, 0xd1, 0x83, 0x61, 0xdb, 0x0f, 0x66, 0xd2, 0x2d,
                0xad, 0x98, 0x6d, 0xef, 0xdf, 0xcf, 0x56, 0x08, 0x87, 0x99, 0x85, 0xab, 0x8a,
                0xdf, 0x3b, 0xfd, 0xf7, 0xae, 0x35, 0xa7, 0xae, 0xc5, 0x0e, 0xad, 0x1d, 0xaa,
                0xd4, 0xc9, 0xc1, 0x95, 0x24, 0x8d, 0xe8, 0x0c, 0x70, 0x7d, 0x43, 0x79, 0x55,
                0xc6, 0xd0, 0xdd, 0xbc, 0xee, 0x80, 0x1d, 0x3f, 0xf8, 0xcc, 0xe1, 0x98, 0x9f,
                0x2b, 0x8f, 0xa0, 0x63, 0xdc, 0x85, 0xbb, 0x66, 0x9e, 0x81, 0xdd, 0x8e, 0xd0,
                0x4e, 0x0e, 0x5a, 0x83, 0xa2, 0x77, 0x4d, 0xfa, 0x6f, 0xa6, 0x96, 0x08, 0x12,
                0x7a, 0xb1, 0xab, 0x16, 0x80, 0x51, 0x8f, 0xc5, 0x26, 0xc2, 0x5c, 0x2d, 0x36,
                0xdc, 0x5d, 0xf7, 0x5e, 0x14, 0xa0, 0x38, 0xdc, 0xeb, 0x19];

static TEXT: &[u8] = b"Na na na na, na na na na, heey heeey heeeeey, \
                       two-hundred-and-fifty-six bytes is a lot more text to fill than you may expect! \
                       So I'm just going to keep writing, writing, writing, and maybe someday I'll be \
                       able to fill up all two hundred and fifty six bytes";

fn word_swap(buf: &mut [u8;256]) -> &mut [u8;256] {
    {
        let mut chunks = buf.chunks_exact_mut(4);
        loop {
            match (chunks.next(), chunks.next_back()) {
                (Some(front), Some(back)) => {
                    let mut tmp = [0u8;4];
                    tmp.copy_from_slice(back);
                    back.copy_from_slice(front);
                    front.copy_from_slice(&tmp);
                }
                _ => break
            }
        }
    }
    buf
}

fn byte_swap(buf: &mut [u8;256]) -> &mut [u8;256] {
    buf.reverse();
    buf
}

fn byte_swap_inner(buf: &mut [u8;256]) -> &mut [u8;256] {
    for chunk in buf.chunks_exact_mut(4) {
        chunk.reverse();
    }
    buf
}


pub fn main() {
    gfx::clear_screen(0xFF, 0xFF, 0xFF);

    print!("Starting enc/dec (normal)... ");
    let encrypted = rsa::crypt_2048(PUBKEY, MODULUS, TEXT);
    let bytes = rsa::crypt_2048(PRIVKEY, MODULUS, &encrypted[..]);
    if &bytes[..] == TEXT {
        log!("SUCCEEDED!");
    } else {
        log!("FAILED!");
    }


    ::caches::enable_all();

    #[allow(non_snake_case)]
    fn u2N_to_buf(num: &u2048, ws: bool, bs: bool) -> [u8; 256] {
        let mut buf = [0u8; 256];
        buf.copy_from_slice(num.buf());
        byte_swap(&mut buf);
        if ws { word_swap(&mut buf); }
        if bs { byte_swap_inner(&mut buf); }
        buf
    }
    #[allow(non_snake_case)]
    fn buf_to_u2N(buf: &[u8; 256], ws: bool, bs: bool) -> u2048 {
        let mut num = u2048::from(0usize);
        num.buf_mut().copy_from_slice(buf);
        byte_swap(num.buf_mut());
        if ws { word_swap(num.buf_mut()); }
        if bs { byte_swap_inner(num.buf_mut()); }
        num
    }

    fn crypt_u2048(base: &u2048, exp: &u2048, mod_: &u2048) -> u2048 {
        let out = rsa::crypt_2048_opt(
            &u2N_to_buf(&exp, false, false),
            &u2N_to_buf(&mod_, false, false),
            &u2N_to_buf(&base, false, false),
            true, true
        );
        let out = buf_to_u2N(&out, false, false);
        out
    }

    fn crypt_u2048_ws(base: &u2048, exp: &u2048, mod_: &u2048) -> u2048 {
        let out = rsa::crypt_2048_opt(
            &u2N_to_buf(&exp, false, false),
            &u2N_to_buf(&mod_, true, false),
            &u2N_to_buf(&base, true, false),
            true, false
        );
        let out = buf_to_u2N(&out, true, false);
        out
    }

    fn crypt_u2048_bs(base: &u2048, exp: &u2048, mod_: &u2048) -> u2048 {
        let out = rsa::crypt_2048_opt(
            &u2N_to_buf(&exp, false, true),
            &u2N_to_buf(&mod_, false, true),
            &u2N_to_buf(&base, false, true),
            false, true
        );
        let out = buf_to_u2N(&out, false, true);
        out
    }

    fn crypt_u2048_wsbs(base: &u2048, exp: &u2048, mod_: &u2048) -> u2048 {
        let out = rsa::crypt_2048_opt(
            &u2N_to_buf(&exp, false, true),
            &u2N_to_buf(&mod_, true, true),
            &u2N_to_buf(&base, true, true),
            false, false
        );
        let out = buf_to_u2N(&out, true, true);
        out
    }

    test_u2048_modexp("norm", crypt_u2048);
    test_u2048_modexp("ws", crypt_u2048_ws);
    test_u2048_modexp("bs", crypt_u2048_bs);
    test_u2048_modexp("wsbs", crypt_u2048_wsbs);
}






fn test_u2048_modexp(ty: &str, crypter: fn(&u2048, &u2048, &u2048) -> u2048) {
    print!("Starting modexp ({})... ", ty);
    {
        let base = 3usize.into();
        let exp = 3usize.into();
        let mod_ = u2048::ZERO - &1usize.into();
        let out = crypter(&base, &exp, &mod_);
        let expected = u2048::from(27usize);
        
        print!("basic ");
        if out == expected {
            print!("OK! ");
        } else {
            print!("FAILED (got {:X}, expected {:X})! ", out, expected);
        }
    }

    print!("Running modexp ({}) exhaustive tests... ", ty);
    exhaustive_u2048_tests(crypter);
    log!("Done!");
}

//
// Here follows a set of 20 encryption-decryption tests, generated by python with random base values and large primes
//
// Python generator code:
// ```
// for i in range(20):
//     p = sympy.ntheory.generate.randprime(1 << 1021, 1 << 1024)
//     q = sympy.ntheory.generate.randprime(1 << 1021, 1 << 1024)
//     lam = numpy.lcm(p - 1, q - 1)
//     e = 0x10001
//     d = int(gmpy.invert(e, lam))
//     mod = p * q
//     base = random.randint(0, mod - 1)
//     enc = pow(base, e, mod)
//     dec = pow(enc, d, mod)
//     assert base == dec
    
//     print("// Encryption")
//     print(f"{{let base = u2048::from_hex(\"{base:x}\").unwrap();")
//     print(f"let exp = u2048::from_hex(\"{e:x}\").unwrap();")
//     print(f"let mod_ = u2048::from_hex(\"{mod:x}\").unwrap();")
//     print(f"let expected = u2048::from_hex(\"{enc:x}\").unwrap();")
//     print("let out = crypter(&base, &exp, &mod_);")
//     print("assert_eq!(expected, out);}")
    
//     print("// Decryption")
//     print(f"{{let base = u2048::from_hex(\"{enc:x}\").unwrap();")
//     print(f"let exp = u2048::from_hex(\"{d:x}\").unwrap();")
//     print(f"let mod_ = u2048::from_hex(\"{mod:x}\").unwrap();")
//     print(f"let expected = u2048::from_hex(\"{dec:x}\").unwrap();")
//     print("let out = crypter(&base, &exp, &mod_);")
//     print("assert_eq!(expected, out);}")
// ```
fn exhaustive_u2048_tests(crypter: fn(&u2048, &u2048, &u2048) -> u2048) {
    // Encryption
    {let base = u2048::from_hex("34e817da26a0016a4d6ef3bbe90687a521a991a873d6b963c8d0356ddfdb09ba6d3af9915abf09aa013ca0e10902aae676a5f3ba0de5eefddeb381d90d051239d1c21cd9da7575692bb861827e306512143fa973306601e92ead43dd212be3abadb615d93d2b0d410f29336dd45c69d8eb4a1016d3a51fae5ae44f899a3478ff632eb4f3c2f47da672643f1901196a6d7974df783a7801aab67b17a94e432c425c457396a3681c31faedc84dfc901a884f67ce83b657e6db178e962d3a7497b69892dee637a6e751e157dc9bc86ed3f97f543d1efd050fe4b3fb3409b59c508e094b74c821599ca97cbe8e23255f0da16818886fcf6dac50002b127608b82ab").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("9e87050660dfb68b03aac0e51c35000a9536e1ecd4657b4b41262da1c019d1adb2b8011f0907ddf7eb4e5487a07d080e8f03f48cc777b257869ba4cb87c1782e2b5dee6522f870f97dd2c37c6068244ad938fe1c8eb716ebe83726795c86cbb887732fe695ba55386ac43f545f7cf3d55aced6b6daef64ea904dd0f9c7bea60a2dc8f0e132691f65725dbdf09d8ae26e31b58578de9f51c2507dfdb0d5d63bb4185b7686d26c6a224f83e807fcde10a6badbc6b634357b71e0800fa1002acb8c43c10beb9d7fd7976172595ed8951a7d7e448016d00c26b470c901eeefb762af4db0055e55ee1fcf46e46971a0f1abe95588fa1e3c4e7930b4d9bef799057043").unwrap();
    let expected = u2048::from_hex("527a1cf98aef50e71f0e0cb794721678bfb3cf60cf3c175c6c267718e3e8f4aed1a7e9f07eb3b76708c3920ed3df536d2a4d4db52e058f10531dcac8a92a84d8b9c6ddc8d6820739b50327a4ea32439e94c4e5b93591ae107e28951645bd66ed7fe0b69f22f873b8784ca3a04fd17d0939febf40d38edd2add7695d66361d8a861723f223cc62f3f469a094aca95969a997070908df8c775c91a651a66df821a08485bec147894625f918b6040ad196ff4fb7977f5e7f9999d1a8d7f0d084e937f4eaf6ce14ac26940408816b9ebb00e7c7b6a9d24b52a5597fafb1c547dffb69aa649854b06edc33cc7cd9c01daf48bb98a139cd12561af110b7e10ca40ff42").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("527a1cf98aef50e71f0e0cb794721678bfb3cf60cf3c175c6c267718e3e8f4aed1a7e9f07eb3b76708c3920ed3df536d2a4d4db52e058f10531dcac8a92a84d8b9c6ddc8d6820739b50327a4ea32439e94c4e5b93591ae107e28951645bd66ed7fe0b69f22f873b8784ca3a04fd17d0939febf40d38edd2add7695d66361d8a861723f223cc62f3f469a094aca95969a997070908df8c775c91a651a66df821a08485bec147894625f918b6040ad196ff4fb7977f5e7f9999d1a8d7f0d084e937f4eaf6ce14ac26940408816b9ebb00e7c7b6a9d24b52a5597fafb1c547dffb69aa649854b06edc33cc7cd9c01daf48bb98a139cd12561af110b7e10ca40ff42").unwrap();
    let exp = u2048::from_hex("a27df3809e3bb178bcc1820755ea5da87b5a4e29db6c49fcd142b8f35b5d1bb7d7c1142523b494a952e06f74b5e47325b9226cc1009488917ec07b22c47c631bb008101c4ac42dc90e57c358f1d8cd9a8b1e081a6d8eee47d136f690df6eabd2f1c3f80d7adc0c0e5021e8682b9880b6e8e5aae0b3793f0fcfea739214542f0c0caf222b6768d247f93ea4128a66ce98a5345a997587cd7f4a88c65c7003d04a425e733c35029cf3899eb534301cdc195706a5dfc6df2e8425f802d337961004b2befa152548929c7bda3a455820c8967850943ab40a16a94d47db36008dd001d98ce86536f132727c8100c5cbd5b0949991a743c3ef3c5a1b294548d734c3d").unwrap();
    let mod_ = u2048::from_hex("9e87050660dfb68b03aac0e51c35000a9536e1ecd4657b4b41262da1c019d1adb2b8011f0907ddf7eb4e5487a07d080e8f03f48cc777b257869ba4cb87c1782e2b5dee6522f870f97dd2c37c6068244ad938fe1c8eb716ebe83726795c86cbb887732fe695ba55386ac43f545f7cf3d55aced6b6daef64ea904dd0f9c7bea60a2dc8f0e132691f65725dbdf09d8ae26e31b58578de9f51c2507dfdb0d5d63bb4185b7686d26c6a224f83e807fcde10a6badbc6b634357b71e0800fa1002acb8c43c10beb9d7fd7976172595ed8951a7d7e448016d00c26b470c901eeefb762af4db0055e55ee1fcf46e46971a0f1abe95588fa1e3c4e7930b4d9bef799057043").unwrap();
    let expected = u2048::from_hex("34e817da26a0016a4d6ef3bbe90687a521a991a873d6b963c8d0356ddfdb09ba6d3af9915abf09aa013ca0e10902aae676a5f3ba0de5eefddeb381d90d051239d1c21cd9da7575692bb861827e306512143fa973306601e92ead43dd212be3abadb615d93d2b0d410f29336dd45c69d8eb4a1016d3a51fae5ae44f899a3478ff632eb4f3c2f47da672643f1901196a6d7974df783a7801aab67b17a94e432c425c457396a3681c31faedc84dfc901a884f67ce83b657e6db178e962d3a7497b69892dee637a6e751e157dc9bc86ed3f97f543d1efd050fe4b3fb3409b59c508e094b74c821599ca97cbe8e23255f0da16818886fcf6dac50002b127608b82ab").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("a0cfab5384d8955d533ba7350302e68970b999ea1d154407b76e0cf416ae73ef67304cac2f2f228c2b22fc8e5a81582bdeb3b40d22ad758e10b3e05e257aca6cef796c5ad0fb1d2eaac5e1bec09960ea8020da6728bd4fb843aa98316a6f4376af6bedfa8b603988f12b277700fc5031f79921ad4bbdf86682e9797530964c0bf3f55f4a951384e3b443f707199045241ce6e4cffb2e02e70d59418848b74159246a8ecbe682b4f2c71b75b9c0a650e53d355ebce340c1b1326ca1c862d3af3690c8bf5a5dbaec287a49de05433a82e772624741862794d5f46e7708c58860c062001b82ec4f35261894c11cc0123b8a1d556b23b6e076c1990fb9cbeeba79b").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("17868b10a18773589ff9731ff324112a34b547a776f31c7587e2fbe441558052e298bc61fdb73fcde7eae3781a8f0fa65d993cfc36ba1fc45f96cf75d97e258dc134d263c4a175459f28d17b79a527f07125fc422eca73ac18e31a29edbf990095edb2a7d49b7fe51063d1e364b66ab4e350d43b8042404d3eb6aea748e6bb367bba6fa93826afed925843f11e4efa1c42862291e3ea982c4e5086eb9eba11f6dc0e19fb996f6688e5c80de660162330f488207a5adf1028ea3aaeec84b53ace26720ca62eef73444b8a470b2ff7a8757e260c5cff21cc82bf5d6aa4911d79eb8fabc760fb08738da4df52d6e7d4f28f8385723fe115f0012faa60d111ad82df").unwrap();
    let expected = u2048::from_hex("4ef7e950f15b4e9cd899aac9854831e862810c90b1d124cd0cafda445673d1a5529ca32ca749316bf22e6225cf3882a2cc0eff862797fe92461adbfd9bb69df70940877698eb91825d4f7fb9c55c76f626d32afb433cf56dd017cff39b9f72e974667c5fb17b4c0b5db29ecd6ec250994fba3fc3e17b7eb111b2808d443c3615dc9ec43450b43fd971aebfe4fc3893237033768f6ab0fb499323d33e158bc1e6cd7401d61ee802fd6cc319fad1e15eae8cb34ef73816b481325f106f1641a5e619e5da7242ccd01a6abe4122ef7022f9c863d595ccd198eb72594de5514d0b93c8acb817cedc25dbb973cb874ae3ba28d32d46733775af25bc22af9922e502b").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("4ef7e950f15b4e9cd899aac9854831e862810c90b1d124cd0cafda445673d1a5529ca32ca749316bf22e6225cf3882a2cc0eff862797fe92461adbfd9bb69df70940877698eb91825d4f7fb9c55c76f626d32afb433cf56dd017cff39b9f72e974667c5fb17b4c0b5db29ecd6ec250994fba3fc3e17b7eb111b2808d443c3615dc9ec43450b43fd971aebfe4fc3893237033768f6ab0fb499323d33e158bc1e6cd7401d61ee802fd6cc319fad1e15eae8cb34ef73816b481325f106f1641a5e619e5da7242ccd01a6abe4122ef7022f9c863d595ccd198eb72594de5514d0b93c8acb817cedc25dbb973cb874ae3ba28d32d46733775af25bc22af9922e502b").unwrap();
    let exp = u2048::from_hex("eb7b5386a557aebeee8f804fcef8b6d841c04ffd782b0433707e1de22a182ee57a485f627ec0496a488665635075b1b116354abd4f10bfea66e8acb878d4ba12b4608793202708365d6fb76ebdb4ee935603638915d46905be177f4d3301260336bc96105b96281c3872f3fbb3a03f7b65e52e8068d6bfce747126cc546d3c8050b536ed6b5b58156bd2de59a873fc934dae51250d61345ede0e745447a4a0e747572302b2f2681a572ba15999b85ecaa84c010b14d7fab7143e5a0b268a952e6102b2126973cc71d01c049f17b62d95b5410660196cafd7efe1d605c76aab684b366e1d929316a9cb229e01b806dedcd61edf4d3bbb6f40195768aeea29fd").unwrap();
    let mod_ = u2048::from_hex("17868b10a18773589ff9731ff324112a34b547a776f31c7587e2fbe441558052e298bc61fdb73fcde7eae3781a8f0fa65d993cfc36ba1fc45f96cf75d97e258dc134d263c4a175459f28d17b79a527f07125fc422eca73ac18e31a29edbf990095edb2a7d49b7fe51063d1e364b66ab4e350d43b8042404d3eb6aea748e6bb367bba6fa93826afed925843f11e4efa1c42862291e3ea982c4e5086eb9eba11f6dc0e19fb996f6688e5c80de660162330f488207a5adf1028ea3aaeec84b53ace26720ca62eef73444b8a470b2ff7a8757e260c5cff21cc82bf5d6aa4911d79eb8fabc760fb08738da4df52d6e7d4f28f8385723fe115f0012faa60d111ad82df").unwrap();
    let expected = u2048::from_hex("a0cfab5384d8955d533ba7350302e68970b999ea1d154407b76e0cf416ae73ef67304cac2f2f228c2b22fc8e5a81582bdeb3b40d22ad758e10b3e05e257aca6cef796c5ad0fb1d2eaac5e1bec09960ea8020da6728bd4fb843aa98316a6f4376af6bedfa8b603988f12b277700fc5031f79921ad4bbdf86682e9797530964c0bf3f55f4a951384e3b443f707199045241ce6e4cffb2e02e70d59418848b74159246a8ecbe682b4f2c71b75b9c0a650e53d355ebce340c1b1326ca1c862d3af3690c8bf5a5dbaec287a49de05433a82e772624741862794d5f46e7708c58860c062001b82ec4f35261894c11cc0123b8a1d556b23b6e076c1990fb9cbeeba79b").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("2f27e7e0708e2f44a37cd57555142a3fca56e05205e3581c2eef03203a2743e841ae5ff7b036dfd3ac43c62d0ee65c2bb069a3080e03d7e0800e6b96d29ba605e432540216593d6adbbc8b82f19b7599921676a14694e646a083e617071326e2c4040ca2a119cb9ee2744d10adab80b801c95edd15826f61d2e9130f2efa757877ef8b0db5eb40a94683389cae3cf40b2578f0ce32d8efb5a7832907ca6f353cd6e2dd25ee22bf076d4d0e1eb144bfb5974f20ee3f5a43559baf9431df42c0acf0c62e7befb0349de03f352d5136f47a37ed93b2da7df49005d7b4aafda37a0a120253b6fed502f6bfbab1e5233a6eb3cc0cd9c8ae4245ac08192a5e35fb593").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("3d0f0e7f14671171862c6b21e187d9aa2044afb1c5e02870b05b7226b9280aa07b72e82c9d618079a4386f9cb855bceff40329e00823178ab5fb58e47a49b58390569cd33578b383d4cbc0196722cb81ce87feb4d97b34db242af8e53fb5fb2c49bdb842cb860ee126c1e7204aa461471671a89577b9b9a1ab5aa97e650aec926f6af794004df616c31f837cf90493f44662f9c7aaef1855d72eb7a4279f866e576307cd2e5bd97115e80e37a081c00cf3e385dff42fc11feab1aaf27758db1ec54e1bb0e914a8cb9978f64275133e0c19e32193205764276b3cc9c3da8d17e5f87cc2f8e6f237d18cf4b4ecc62065e0caa952e245d4a67f28af7e457aa5fd63").unwrap();
    let expected = u2048::from_hex("2655320d2d45b78e3d4c49bd4dfed6b070124cfbb0c0bc0cdb3d5dccd63cb5656fec59ffb441532db44526589948b1a33e1ec940af8f01453ee3ac18cc62b0af76920a2e4f2237ef90561d3d04a7de7f62e08ae8466e6b000c6b1d495a9fb666f3e7df949026739f485937c3b7cb75084710f3480d0611e0491f550cdaf0f71a413da90e99545c241de1ff081601fd096bc5d40874ef850f2f9f776a42fbba0cf7fb5f98c071d3601cf3ad7b917067b5d06bf33bf1ecc51125c758a6606c4291379b6882f26fab3a339f2b0a1d9f1731233f7a3308c8a76df96fa585d147276a77e84458560f1e640eab1224e0cfd92cb71b649bcf0eea00f8621646e401dbbc").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("2655320d2d45b78e3d4c49bd4dfed6b070124cfbb0c0bc0cdb3d5dccd63cb5656fec59ffb441532db44526589948b1a33e1ec940af8f01453ee3ac18cc62b0af76920a2e4f2237ef90561d3d04a7de7f62e08ae8466e6b000c6b1d495a9fb666f3e7df949026739f485937c3b7cb75084710f3480d0611e0491f550cdaf0f71a413da90e99545c241de1ff081601fd096bc5d40874ef850f2f9f776a42fbba0cf7fb5f98c071d3601cf3ad7b917067b5d06bf33bf1ecc51125c758a6606c4291379b6882f26fab3a339f2b0a1d9f1731233f7a3308c8a76df96fa585d147276a77e84458560f1e640eab1224e0cfd92cb71b649bcf0eea00f8621646e401dbbc").unwrap();
    let exp = u2048::from_hex("188c0e37e8c7593e360c057cdbd0f66a23780bfca57c11ea9769be73ce5c6cfb933805d18e7d2b3972ee58de7421cd238f53d1b1f425cc1367ff3db6af6a00687d3c79790b7f5d50d2b532a34cf5b268e41cf194c7f5be1ec064c64b7633ec5fdae0fb03165d35b50a39010b8ef694ae58c79458276317f29b9362c3224e6d6d0ce3573913aebb9bda153d83634126e040632b1b46ab63457fbc937658a041de2f4061c31efeeb95155ba8dd955f3d7d1fc852a64a4cfb4a307f3d3900be909a09064744a7cecc6cb7162ad903584307a6eb226b6d6ac965a310fb9a76211cf231725bd3dbaa80ffc4f53fb8300f1bf933d48269926b94ea03677d2deb70781").unwrap();
    let mod_ = u2048::from_hex("3d0f0e7f14671171862c6b21e187d9aa2044afb1c5e02870b05b7226b9280aa07b72e82c9d618079a4386f9cb855bceff40329e00823178ab5fb58e47a49b58390569cd33578b383d4cbc0196722cb81ce87feb4d97b34db242af8e53fb5fb2c49bdb842cb860ee126c1e7204aa461471671a89577b9b9a1ab5aa97e650aec926f6af794004df616c31f837cf90493f44662f9c7aaef1855d72eb7a4279f866e576307cd2e5bd97115e80e37a081c00cf3e385dff42fc11feab1aaf27758db1ec54e1bb0e914a8cb9978f64275133e0c19e32193205764276b3cc9c3da8d17e5f87cc2f8e6f237d18cf4b4ecc62065e0caa952e245d4a67f28af7e457aa5fd63").unwrap();
    let expected = u2048::from_hex("2f27e7e0708e2f44a37cd57555142a3fca56e05205e3581c2eef03203a2743e841ae5ff7b036dfd3ac43c62d0ee65c2bb069a3080e03d7e0800e6b96d29ba605e432540216593d6adbbc8b82f19b7599921676a14694e646a083e617071326e2c4040ca2a119cb9ee2744d10adab80b801c95edd15826f61d2e9130f2efa757877ef8b0db5eb40a94683389cae3cf40b2578f0ce32d8efb5a7832907ca6f353cd6e2dd25ee22bf076d4d0e1eb144bfb5974f20ee3f5a43559baf9431df42c0acf0c62e7befb0349de03f352d5136f47a37ed93b2da7df49005d7b4aafda37a0a120253b6fed502f6bfbab1e5233a6eb3cc0cd9c8ae4245ac08192a5e35fb593").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}

    // Encryption
    {let base = u2048::from_hex("1db2064f323f6df6e2613f7009fe967b0280c6457958ce469e2635b286327aed5f926a032d4300ef42455be21b9fdcc36e55a3ef35153aaac4d6bb8d7ae9efd289e1cf4580149e488af874a807c2cdbdd0adb6b7707e3179dd27de3194fefb3ddd01a1187580f40184b6affa6552d9424f6fa9921eed43b1a9dad5f1c1f0aa1fe27bbd414e7374854e5074d80b6838c575dddb27d426c85f22327cac34aec3f2d223687b8717b19a7e41768232c5db51d4ed6816c684dc6d4f90b68fbc4119f98c035ecb863278e33a52a98e6a772dd9f3d4ada5ae533addec23712d6053a12f5a22356014b99f63de6a9b1a18581480946657baa60038dc9864e64366fd2f77").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("58978035e7c29bacb53ed02464e3c5618edeb7310f15ca6b7b9a86d87865f5739df5b0c719b3b5fafe78e2014e794b252a79248331c59f923f99a1fa324ff4dbcf607df81d375fd6e4850a32e74de746f788d2af8c3173c880951677a76846b805832f9786b82bd1ccaaba2c26c960c458ab7cf51b6e6627b7f66e7041719329759b00710e37a0c267df3bbf8ec1374b3d9a5d05cc88868b1f0ad555edbd331e879ece6411cf132a2d17b8471d11a4cf821d36c611d334a59d6a529badc505229557eaa28c58fe0af875ea928f21d95ea3e4ff60f31214458bac6282e231b7dedcc838144b9a717016f95035d1716717e3288afe9480c8f57ef49434a85b790d").unwrap();
    let expected = u2048::from_hex("1f3027ce4a67e5e5c74e051a12eb70418199da506d535ea18031460e0dc563d4cd0295a221dd2da0d4d5f6ba9ce32206a9ea8f24e9cede5e49c91381846b44afc741f317374b68a62591588e084cffe8ee3595a37a3e8d3910f6a0529f17de0741a290c025e9d2ead2adeac4454fd4397b32d26ca4bde6e7e8cae250b37ee01c6e5830ff63da9ce1a2ccf9552603e18bd50d5fef7aecc20b4b66d8360f8539787535467804041fe64dd44d0d625f854de85664606cee9b1e6f63023b239bf1da529dfa2325e985b67a2937da5db0ead58d73c7c6a1f3e4007787277d8c836566f9e653f89c7fb8d9c2c97009944031eb05e468a633daad854281ebf35ea9be8c").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("1f3027ce4a67e5e5c74e051a12eb70418199da506d535ea18031460e0dc563d4cd0295a221dd2da0d4d5f6ba9ce32206a9ea8f24e9cede5e49c91381846b44afc741f317374b68a62591588e084cffe8ee3595a37a3e8d3910f6a0529f17de0741a290c025e9d2ead2adeac4454fd4397b32d26ca4bde6e7e8cae250b37ee01c6e5830ff63da9ce1a2ccf9552603e18bd50d5fef7aecc20b4b66d8360f8539787535467804041fe64dd44d0d625f854de85664606cee9b1e6f63023b239bf1da529dfa2325e985b67a2937da5db0ead58d73c7c6a1f3e4007787277d8c836566f9e653f89c7fb8d9c2c97009944031eb05e468a633daad854281ebf35ea9be8c").unwrap();
    let exp = u2048::from_hex("37c3cc0bbc0ef89f06312223acf14622412459af0974a2c7a89b179cd4d2ff99329039bb33a7506db27db5059a518f606a7a46e647dc8f808deb68a239c6178358b48c636673d32e7fd39eb6427962604b19f044c02280ca7019021045d1f8d8537991e9f79806706b092c975af2de41b9bbabb470fb21ef54deb2029415a8308f25937b28af3e6d595a917754552dba863d127261d70acecc8dc4e5812986fc0c68eb1a13225a9ab545e132b954ecfadd7bf95f4e8063408020789333feb804d4d016b30af7b03b6d58fc5d644f0d02fa528b182dc15519e154285a9a6d01d87f93cde73a7c7401a10d3ba41ed143412fdbd58ab07a36efea504b93a78030b").unwrap();
    let mod_ = u2048::from_hex("58978035e7c29bacb53ed02464e3c5618edeb7310f15ca6b7b9a86d87865f5739df5b0c719b3b5fafe78e2014e794b252a79248331c59f923f99a1fa324ff4dbcf607df81d375fd6e4850a32e74de746f788d2af8c3173c880951677a76846b805832f9786b82bd1ccaaba2c26c960c458ab7cf51b6e6627b7f66e7041719329759b00710e37a0c267df3bbf8ec1374b3d9a5d05cc88868b1f0ad555edbd331e879ece6411cf132a2d17b8471d11a4cf821d36c611d334a59d6a529badc505229557eaa28c58fe0af875ea928f21d95ea3e4ff60f31214458bac6282e231b7dedcc838144b9a717016f95035d1716717e3288afe9480c8f57ef49434a85b790d").unwrap();
    let expected = u2048::from_hex("1db2064f323f6df6e2613f7009fe967b0280c6457958ce469e2635b286327aed5f926a032d4300ef42455be21b9fdcc36e55a3ef35153aaac4d6bb8d7ae9efd289e1cf4580149e488af874a807c2cdbdd0adb6b7707e3179dd27de3194fefb3ddd01a1187580f40184b6affa6552d9424f6fa9921eed43b1a9dad5f1c1f0aa1fe27bbd414e7374854e5074d80b6838c575dddb27d426c85f22327cac34aec3f2d223687b8717b19a7e41768232c5db51d4ed6816c684dc6d4f90b68fbc4119f98c035ecb863278e33a52a98e6a772dd9f3d4ada5ae533addec23712d6053a12f5a22356014b99f63de6a9b1a18581480946657baa60038dc9864e64366fd2f77").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("fd3b28f3a5d51dd6e8d0eafec7f07bb91396ec28956ff5b5a95ff01fbbbd17bfa0ca4e6dfea50a5d38da0bbda1e416b712518c3fdfd51347382b62baa254788eec5d3b24fa07cb1812d63b0c118ea0da09fd47b7486f9f80352b19f2a8312a4662b6139020f6bc48d0ed3cab5c439276fb6cec458ba3f2c32d9a0f5778025f89fbd28e5d262e304af40b70ddf637d2b20db614a891a7fd30904ae774d6f5fef71e79209c939849f7522a2de3435d45907339e6fd9fb16be1111fa4d7e918ee27a24cfae11ebc2e517e1603a36363e785809b67c97fe6ac0370f62eb9556ea5fcc89412479dfa0fbbb8ba932dca9d69d2a9b696b60eee0cb98947557b2161817").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("2be87c9818030d0df1634c0a787726606c56ea9d673ca029b1a27ac201202c3859f5d2f108a80cdab785b7a3989d46dcdd2b5f8572d83b66c6205f58cbcd987b2c5e8e3a2b7a1e3a1ad467f8811881d3190babead3fc403f7336f009d5a10e31b2df484d9a8429fd8c96b70b0f0b7f6ce99bad9aa63d2a2510eb6b4aadb8d1232d86b9ba4473cb0449b0839f79c8bb4d00aa88e8edc62d0c8cbda72f29645c678e85bdf863bdeaa67257d5ba2eade4d9542813d9d323fa0298744ebe012f398faf9eb6b7f36bb765ac0f7a83a2bbfad82778f7e6fb7f0f2b5b58a11950c86b6eafea0cafa3da40f4a5d7a3e0c3cfc67d094f0ffd2e20a5cf416722d03bba2539").unwrap();
    let expected = u2048::from_hex("13cd23d966aaa8dc9607f5bb1b6989d95599a59157148928f459e2a1d7d72ab7eb32f09e84f48fe47c0a799d8c8d538f2dc5c0f8007e3d3bce99f216d54f3a83e7a7b15993ab6700bec49c81017b2a8edea8e662fcb31d1d9bdbf2f1faedcc2fbb114703ffcd1e08a5d9c8874ddb3f518e71e60a9233d97ad86ff75830817e4a0d95df7e54d43b622199e3f956c4f2868b4dc4383794e892f3d0a874b8f089cc3fc3c2d24821453f4a33b2678cd6361d2604c1ca7dda955a5878cf5a2c6755f7be7483f34c3ca17d363e58ad1e247d049313b447e3d361184d3861cc3f4fa5199a889c2c9fa5aa813d9d4966489cdb12a4215d7469f35a2cc0d6ea4adce65895").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("13cd23d966aaa8dc9607f5bb1b6989d95599a59157148928f459e2a1d7d72ab7eb32f09e84f48fe47c0a799d8c8d538f2dc5c0f8007e3d3bce99f216d54f3a83e7a7b15993ab6700bec49c81017b2a8edea8e662fcb31d1d9bdbf2f1faedcc2fbb114703ffcd1e08a5d9c8874ddb3f518e71e60a9233d97ad86ff75830817e4a0d95df7e54d43b622199e3f956c4f2868b4dc4383794e892f3d0a874b8f089cc3fc3c2d24821453f4a33b2678cd6361d2604c1ca7dda955a5878cf5a2c6755f7be7483f34c3ca17d363e58ad1e247d049313b447e3d361184d3861cc3f4fa5199a889c2c9fa5aa813d9d4966489cdb12a4215d7469f35a2cc0d6ea4adce65895").unwrap();
    let exp = u2048::from_hex("59c7821babdd712ff547481090c9709af06bb84628f579b847132756d0de6c0cbd453c10c5d678922f77274b479f2f6a2481af4b3acc908950cc98a903f05bbc5fb8e7b0617dcd98998b7f1c4d3b4319d4b85cca48b21cdca044d1040ae0ca192cda090944ccc0df443c580230bd1dcc20cec566d64b72855fd73f06efb85b4784615859a41b2fc3b119e0d46e890634393477c79376e2679be5f02adb33122d0b8758d6de4a902aafbd7019567d3c4447831f58dd90932d314b02e579f6faba94bb208238cd4853df7e04f38b0554f359025eb0c3e01ad8b0cc81d51cab846e812d30f5c566918cb0e6eae85736c6cbc47e2cec835f6e40268f39e1ea6edc5").unwrap();
    let mod_ = u2048::from_hex("2be87c9818030d0df1634c0a787726606c56ea9d673ca029b1a27ac201202c3859f5d2f108a80cdab785b7a3989d46dcdd2b5f8572d83b66c6205f58cbcd987b2c5e8e3a2b7a1e3a1ad467f8811881d3190babead3fc403f7336f009d5a10e31b2df484d9a8429fd8c96b70b0f0b7f6ce99bad9aa63d2a2510eb6b4aadb8d1232d86b9ba4473cb0449b0839f79c8bb4d00aa88e8edc62d0c8cbda72f29645c678e85bdf863bdeaa67257d5ba2eade4d9542813d9d323fa0298744ebe012f398faf9eb6b7f36bb765ac0f7a83a2bbfad82778f7e6fb7f0f2b5b58a11950c86b6eafea0cafa3da40f4a5d7a3e0c3cfc67d094f0ffd2e20a5cf416722d03bba2539").unwrap();
    let expected = u2048::from_hex("fd3b28f3a5d51dd6e8d0eafec7f07bb91396ec28956ff5b5a95ff01fbbbd17bfa0ca4e6dfea50a5d38da0bbda1e416b712518c3fdfd51347382b62baa254788eec5d3b24fa07cb1812d63b0c118ea0da09fd47b7486f9f80352b19f2a8312a4662b6139020f6bc48d0ed3cab5c439276fb6cec458ba3f2c32d9a0f5778025f89fbd28e5d262e304af40b70ddf637d2b20db614a891a7fd30904ae774d6f5fef71e79209c939849f7522a2de3435d45907339e6fd9fb16be1111fa4d7e918ee27a24cfae11ebc2e517e1603a36363e785809b67c97fe6ac0370f62eb9556ea5fcc89412479dfa0fbbb8ba932dca9d69d2a9b696b60eee0cb98947557b2161817").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("4d3fec17a942fa0030b0587ff6ee85d91b291e38eb3375f8319fca3ccc28bf1f2f04e8d4d075d4d49159c28552a4487ab955ab6e99f899b1c4d3d15231e028ef1c142019273745c96f98672a2523a196faa6042876fd6bc842b70f8e864ed6f58317f63a14f23ffa6f72857ed9cd40dfdabda8d5636dd35394002ea53973d12aad733c615266b9fe4d75953c2ea59f011cb62b8afd5dd38377c1cef70bf35b85bcb7da6c4ae2a1264e689f39069f67095d0a6edf2338645534df22cc8f2da83c4b01422573cd349ddf14232510404cddb97b2f7c13d9b9d63d363e4cb29ca163c87ef51c13d0d64b117a6c6e260859d213ad52fa9f2090399e68d76457530d55").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("ba449dbfa943cc845b3391ef1f6bdb0689490fe8ae9362f6dbdf900d281c39549028b1235ff6842857d938ec3cd70a5b1a97179de3d6152a209f19918844cc3c1f0b05cf29a4d9a2ec1526ee9671b8d00b43024f9169cd9edfa9e09c9af3ffeef0ed0b8514b0520d0320dc64e1ae0ad2a5c3469440bd3fa746171313711f163ebb980c285ac0b7c6c4e5ec5ad7df7ce940dbac7a44262547fc285e9732355af40ef84deacff5cb8f12fadd3999cdd5bd9fa45d13de8ed71c604a5d4223eff342ee39e1c78cf49937b7c8e286ca79033cd19abca18b4e1b2ac36f9e6821c40dc07d32679f498713cc891c404f693ce4e86a1175135ca40ea2ce169cb8b0a3392d").unwrap();
    let expected = u2048::from_hex("7c7e9e56ad8f140c3c71c67c7e0cf892a82b04fe7caeffceccf3a81c2cb4addd7f14ba6be80cf6cce1737724af670ee6dd3999c8aacf4d2a111a768c05777854554e9e9a2ab2fbe7d616053cd7a7049111e7533457f58374c54c54159efeb956b1edbdf48fee992c2f3b3795175e034aaa3d967d9ee0d85704cd7941441be6720e8bbb6f6e56cbe06be22cf97a38ef83dcfcf8b378d380923f3b15e18ca162d9bac26ef070bb96089dd7e8670cebdfc273decaa9852ee72e53e9a2f7fc90b0d50a43859b0b93ff78d3e0a65d3d465af11fbd6b1e278fc6d3286a25a210f93df611e1ed9d210de3938ba03ae8b5da8d6a9d12dc106207e3e5186f7e368def390d").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("7c7e9e56ad8f140c3c71c67c7e0cf892a82b04fe7caeffceccf3a81c2cb4addd7f14ba6be80cf6cce1737724af670ee6dd3999c8aacf4d2a111a768c05777854554e9e9a2ab2fbe7d616053cd7a7049111e7533457f58374c54c54159efeb956b1edbdf48fee992c2f3b3795175e034aaa3d967d9ee0d85704cd7941441be6720e8bbb6f6e56cbe06be22cf97a38ef83dcfcf8b378d380923f3b15e18ca162d9bac26ef070bb96089dd7e8670cebdfc273decaa9852ee72e53e9a2f7fc90b0d50a43859b0b93ff78d3e0a65d3d465af11fbd6b1e278fc6d3286a25a210f93df611e1ed9d210de3938ba03ae8b5da8d6a9d12dc106207e3e5186f7e368def390d").unwrap();
    let exp = u2048::from_hex("3b1e0bf30885bc2345ced8424c76aecd24454c074d60f9c7df80d4f758039d2e799270a6098ef3e2d9fed75222fd1d0c4d24271ab574fcc2a217dcc593ba4217d2c26cd59321fef0f67cc01e79211ec6e8cc1bafa5372f4b7d312d5886d56a252bd21015ecbb094f97ee96046e9c0e534cc8ed5da02e704566b96c147f929e3c3f061b7c930661aa879a94e887076a36e12e926022794b00c961c8e2668c5b5b03da9e338da19911f59c0486d366f3fb1dd22b9c9e4bef77763ded16af14aa675eac440b74636c04f1f867b77dbf3329cca9ad06787e9e649bbe40dff315201ae6c558d7492fd29c55b710910428a11382f2817d3b54cfd607313c6825873b01").unwrap();
    let mod_ = u2048::from_hex("ba449dbfa943cc845b3391ef1f6bdb0689490fe8ae9362f6dbdf900d281c39549028b1235ff6842857d938ec3cd70a5b1a97179de3d6152a209f19918844cc3c1f0b05cf29a4d9a2ec1526ee9671b8d00b43024f9169cd9edfa9e09c9af3ffeef0ed0b8514b0520d0320dc64e1ae0ad2a5c3469440bd3fa746171313711f163ebb980c285ac0b7c6c4e5ec5ad7df7ce940dbac7a44262547fc285e9732355af40ef84deacff5cb8f12fadd3999cdd5bd9fa45d13de8ed71c604a5d4223eff342ee39e1c78cf49937b7c8e286ca79033cd19abca18b4e1b2ac36f9e6821c40dc07d32679f498713cc891c404f693ce4e86a1175135ca40ea2ce169cb8b0a3392d").unwrap();
    let expected = u2048::from_hex("4d3fec17a942fa0030b0587ff6ee85d91b291e38eb3375f8319fca3ccc28bf1f2f04e8d4d075d4d49159c28552a4487ab955ab6e99f899b1c4d3d15231e028ef1c142019273745c96f98672a2523a196faa6042876fd6bc842b70f8e864ed6f58317f63a14f23ffa6f72857ed9cd40dfdabda8d5636dd35394002ea53973d12aad733c615266b9fe4d75953c2ea59f011cb62b8afd5dd38377c1cef70bf35b85bcb7da6c4ae2a1264e689f39069f67095d0a6edf2338645534df22cc8f2da83c4b01422573cd349ddf14232510404cddb97b2f7c13d9b9d63d363e4cb29ca163c87ef51c13d0d64b117a6c6e260859d213ad52fa9f2090399e68d76457530d55").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("1e4b037f38a4671682d6c604fc1440acf3b00c685a625e192b25e9229fab8f8fdef5d9e5d6b19b663c5503871c64a6dddd54f2d9de8817acbc949b324cee1a117d30977a1198aa53225ad5ec3b57e230dd2e928878c795cecc16350e83b3d584e65de23fcd01e7a0c2f8dc88b427dffb7d39a125ead78cad1dbaa3b67958806563653180c18c45ceaffdf356335fb1c208a4c2601b4c5be36e4b2367cc184f51991597097885ece63f351c5a67f2dd7d3901956a65cb9a6d02eb149300261c328a2a6ba343fca35e6936ea9536d09bf61f84d2fd23fd1a3d48d934d37f08b26dfa6747cacdc66ce9fea9e009a55528fc2c73185b5496a4054eddd308a43bb113").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("55be979bc531b3308ffd1e1d44cd18d7942298a28b0fa7b4d5db49a377acd6dfc51d3c398937b580014dbeca80f54cc366ca02d4e812e38dfd96a680c5517127ad7f0b65dcba2759bcbdfef34cb945d5dfaf564c2dc5ad95b3308800ec74831008edf1ac4368fc3cc6d4b6c15c8adfd362fb515169d2cd2dca0b9b79546e3787cb46cc1a496014bd572febfb92a9a6b11a31fadef5f70dc88197c9bb4ee345e18e282813c1e6669022a930edf6ae40d4f6d6d7c1f7770e2038fd1055b0a6505bf53866144c7ff9c741616e1406f40ae6645eee8ff29bc409f9d087754aabda27da0ef8024f2efcb82bd9a18e5bfbb8cf5ef2582a5437f26b270b97127bde14e3").unwrap();
    let expected = u2048::from_hex("473ac4976d22f6189e06dab9dd998b3836bdefcd21c2d87dda013fcff3c735bf70d048fdff1dc5be05a44176694c1f09728c1809b86ce5d0ee13d72e679b67619467e706546e094aa8dc6fd5ad221717fec05c137e2d46f2179a77c9ff0664c200f8518e957a95abdedeb56699055af8a3818c7271cfe0da3e5436e718bdc0c5b0c6ad46d439d3df944e9ee9c0c8c78dea11f58b355dc7f7178caaa6cfc2e096ab3187150449f971fefd2060bbe47618ca1e4275884765ca2d158794cdb5450ef0ab773f223951ba05ecdf3e9576469e3f10ad5406f7e9bf108e7efd61a989070684a08eeef5cecddaa1493859454953adc610b1bb2f5219c6dc398637f27bf0").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("473ac4976d22f6189e06dab9dd998b3836bdefcd21c2d87dda013fcff3c735bf70d048fdff1dc5be05a44176694c1f09728c1809b86ce5d0ee13d72e679b67619467e706546e094aa8dc6fd5ad221717fec05c137e2d46f2179a77c9ff0664c200f8518e957a95abdedeb56699055af8a3818c7271cfe0da3e5436e718bdc0c5b0c6ad46d439d3df944e9ee9c0c8c78dea11f58b355dc7f7178caaa6cfc2e096ab3187150449f971fefd2060bbe47618ca1e4275884765ca2d158794cdb5450ef0ab773f223951ba05ecdf3e9576469e3f10ad5406f7e9bf108e7efd61a989070684a08eeef5cecddaa1493859454953adc610b1bb2f5219c6dc398637f27bf0").unwrap();
    let exp = u2048::from_hex("1c7c30c9a2fd1bd66a3f609dc09992432c074245dd84d9e60d95c824f2410d3151bea09f4ca2a13d61317eccaf82ce79abd038989a708c0043daa47deb0f5f541b23359a25760254a18b4d036eddae019b4a18953e2f89b74dcc35a278eb4c0f2ba840bd45b7bef441e9b0bd140d5ec64effc6c8112be2d5ef6563c52ef35ea6ead33ebb56ee9b522604e5342fc9f3b10bfa7b24d55584b7dcd598fa062eaa60f1a43c6033ac9ec01bf77ce51d67db59cbc37296f61ac4d3c6f9844b2495b2b0ea765c520186da31b9985f539dd99f374258deffb40a31b68ea24178324083f14a8c81384228ff8c3d297551c041d5f9d739136644da698820821aae23751ec1").unwrap();
    let mod_ = u2048::from_hex("55be979bc531b3308ffd1e1d44cd18d7942298a28b0fa7b4d5db49a377acd6dfc51d3c398937b580014dbeca80f54cc366ca02d4e812e38dfd96a680c5517127ad7f0b65dcba2759bcbdfef34cb945d5dfaf564c2dc5ad95b3308800ec74831008edf1ac4368fc3cc6d4b6c15c8adfd362fb515169d2cd2dca0b9b79546e3787cb46cc1a496014bd572febfb92a9a6b11a31fadef5f70dc88197c9bb4ee345e18e282813c1e6669022a930edf6ae40d4f6d6d7c1f7770e2038fd1055b0a6505bf53866144c7ff9c741616e1406f40ae6645eee8ff29bc409f9d087754aabda27da0ef8024f2efcb82bd9a18e5bfbb8cf5ef2582a5437f26b270b97127bde14e3").unwrap();
    let expected = u2048::from_hex("1e4b037f38a4671682d6c604fc1440acf3b00c685a625e192b25e9229fab8f8fdef5d9e5d6b19b663c5503871c64a6dddd54f2d9de8817acbc949b324cee1a117d30977a1198aa53225ad5ec3b57e230dd2e928878c795cecc16350e83b3d584e65de23fcd01e7a0c2f8dc88b427dffb7d39a125ead78cad1dbaa3b67958806563653180c18c45ceaffdf356335fb1c208a4c2601b4c5be36e4b2367cc184f51991597097885ece63f351c5a67f2dd7d3901956a65cb9a6d02eb149300261c328a2a6ba343fca35e6936ea9536d09bf61f84d2fd23fd1a3d48d934d37f08b26dfa6747cacdc66ce9fea9e009a55528fc2c73185b5496a4054eddd308a43bb113").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("277b22c97e03ff61f4d4a70df755b9df425d11b848a794eeaca69fd67eb24f82b1efc3cebecf8fe7e05d21387c3d862589b2d7eff50ce9131cf2e9de27bcde415f104feccaa5ca96734002542b9fffddb70c4d0e3c660f4ead206ac87ab06472aaf7a4e4b102907d1e757db2a3fbc8acc36a8be0aff3c8281705d88634ca2cd339ac91e79956d293f128eb95290dd7931c1e3347003ac54344216760b73af3aa0a1d2c5f043247fc0cbf85d70bba9520d666b61561a61b3435a1359ca09fa528dc24d4bea9ff58730b0448ad8a62a6d6680cce174d5c243e50b580e9e60a126d226ea495932cc48d1ff6cde2f291efe1172f7b48237459d86955e811c469c967").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("32cb485ed0b3f302b53cc9407acf44dbdd770bf96cec3a250619815f4f431977b24cd6514cfb2b50cf8486116b784e3f476c4d37db3230fdcf701302f61d6c9276468d073d25335c7e99fd1eca18118ef5cf1fb714579b17306e937f7f1c9cfb711619ba98948ef2623f4aca160b4150477abde896d7beec5195abf9176087b536121f2efaf15f1ea21a181f1828cc8c2c456a38540bc2257293d48ad5789bb4a80b9ae369bc5e8cbbd833db9592a6d7ff6773a3b03ce0b3f1db1ddc70a4e3691c94c3145338b0c0958767a9fb2721dc34a588107887091c55d8db6947d7d110229be4301550daa56bdf2b33b2b383aa3d6ee2c5490cd55394e0b157fc559f0d").unwrap();
    let expected = u2048::from_hex("2ad981d46f0acae1a1b4fa6e6d19327b11ca61374486fa02b0004a0fc61e8d44e357fe6ff7bfa65181f003792314fef334105031d038bb59baa25ea6c94b6d375468afb80c7e631fd15b90e9b3cacb1a12d814aa37ded8e95f170f52658ed6feaaed35d2340fc3eab1f905458efb78d0eb4e45a120cb4f35d084f99f9e87d7567ba4033777d4dbc6806080707fa527193435d4c3ee92ed49549a8ebab5a72c90cea35b972e0a51b36941e6371e6888d3eeb602790fbec24f12c966e3ff9cc30fd03a59a5f4603e4233b38a35bd6599c69bd70ab292d9fd4343f1bd069034b97903c64e9352fc032b0ba1683ab63888d26ba67966d5dc36643dbe136182299b9").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("2ad981d46f0acae1a1b4fa6e6d19327b11ca61374486fa02b0004a0fc61e8d44e357fe6ff7bfa65181f003792314fef334105031d038bb59baa25ea6c94b6d375468afb80c7e631fd15b90e9b3cacb1a12d814aa37ded8e95f170f52658ed6feaaed35d2340fc3eab1f905458efb78d0eb4e45a120cb4f35d084f99f9e87d7567ba4033777d4dbc6806080707fa527193435d4c3ee92ed49549a8ebab5a72c90cea35b972e0a51b36941e6371e6888d3eeb602790fbec24f12c966e3ff9cc30fd03a59a5f4603e4233b38a35bd6599c69bd70ab292d9fd4343f1bd069034b97903c64e9352fc032b0ba1683ab63888d26ba67966d5dc36643dbe136182299b9").unwrap();
    let exp = u2048::from_hex("1d920da11aa1e85e31e22022685cb4f0704f420004d2c6f6e444d7a058fb4349aa84e3b03e6a159edcc62b6c30c36a7f99b65f2df41a403ded69ddbce2488c50a7dd62ca4d653edacb897266b3ae02158187acd05f5e066d759b54f096065e6308eef383976dc52fd97fe7567186e93b31f72f0ac7e64a16e202df34b5d0a8b035f4286568f263895725e7ab442f2ee1c8a3d0c749af4f479e41207410d80462452e855e98656302563e2a1182df3517970f89e0ca51b5048f326c0f0d9a87fcc80f050a0be3c207030c3526e8356f3ceb1e484cd89aa8c6b3c5e3a19bc648190927e14668569a89558e1ba0dde0fa1a8d101315ba3482086cc87e83bc02b41").unwrap();
    let mod_ = u2048::from_hex("32cb485ed0b3f302b53cc9407acf44dbdd770bf96cec3a250619815f4f431977b24cd6514cfb2b50cf8486116b784e3f476c4d37db3230fdcf701302f61d6c9276468d073d25335c7e99fd1eca18118ef5cf1fb714579b17306e937f7f1c9cfb711619ba98948ef2623f4aca160b4150477abde896d7beec5195abf9176087b536121f2efaf15f1ea21a181f1828cc8c2c456a38540bc2257293d48ad5789bb4a80b9ae369bc5e8cbbd833db9592a6d7ff6773a3b03ce0b3f1db1ddc70a4e3691c94c3145338b0c0958767a9fb2721dc34a588107887091c55d8db6947d7d110229be4301550daa56bdf2b33b2b383aa3d6ee2c5490cd55394e0b157fc559f0d").unwrap();
    let expected = u2048::from_hex("277b22c97e03ff61f4d4a70df755b9df425d11b848a794eeaca69fd67eb24f82b1efc3cebecf8fe7e05d21387c3d862589b2d7eff50ce9131cf2e9de27bcde415f104feccaa5ca96734002542b9fffddb70c4d0e3c660f4ead206ac87ab06472aaf7a4e4b102907d1e757db2a3fbc8acc36a8be0aff3c8281705d88634ca2cd339ac91e79956d293f128eb95290dd7931c1e3347003ac54344216760b73af3aa0a1d2c5f043247fc0cbf85d70bba9520d666b61561a61b3435a1359ca09fa528dc24d4bea9ff58730b0448ad8a62a6d6680cce174d5c243e50b580e9e60a126d226ea495932cc48d1ff6cde2f291efe1172f7b48237459d86955e811c469c967").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}

    // Encryption
    {let base = u2048::from_hex("e0b12beaafacae42385fe6a7bb1aae51f849d3fa57cca38d295ed431435a92820e3b8f36c7320132a4522c36e6741cc649e29336ed818a7f799dadb381a3153b00a43ccd7160a94fc8e662f55a2415ff85e63049212fa066d7b4e7757a9af93b940bfef0c8f049c0c7c8f62c89d6dc0c0c3025509cf3b155008d8f10ec94a743c9113a86feed955712d95e1da7b2dd6d5c295ea5f311ae99a71bc07f0666f0a85a21175e2ac2068afdd0e710c0bcd52b39b52b36e01411748d23c0ef32b2ec4a73a11653e2c70da14e2b384fa666a7863c457d0ddf1d8794ace36a20e21d0ce37e2deb0a78dac052ee192a42f70160fa23f4b7807461cc0ebfcf1b5c9da3985").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("339003a8f10f75c52d41987dd3a04375dc8ad4d1daccaa98ab36a26593d9b5ee28e388876ff6c2d7ad9750bbd947f52236031971afd50e4a4ea93ae285d1df291cd00e1457943a7d41472a25e72b9e6f61a9001f72ffb31c1bc802e96ad467d6b4baa9993eb4d281e4672ff74c34b3d9bca04132bb9040d215496f7afcdb9ea87ee4da3e73d0bae2a2fbede340edcced362974b3f266f271d164012dc16e6105b70057c3db7e74cb193ec01e5f2421dcd1fbc3a263605d0792eab31699285fd0fba4395b31d011f2d9890586b2eb98a6adafd52a8b2cbd11abe528b83901c19cc36a42531525caf176c66d4a6a373d9232ecdac4934e41a8101ba6d9fa31166d").unwrap();
    let expected = u2048::from_hex("886843baad4c56e7c8f10425264f6ead0e67b30e9706c16cf4910d534166e5fe69c9ea0d5bba73326cf97cd1303938344644f38c5b7a1c9ec4a1668bbba7a457fa8c492cf6e7fb5790ed2582ff010acc923ef7838dfe18c5a2bf3998ad681d5bc7b61d89808bc9cee7c2313d2efe36b306597addbeddcf64ca9bb22f5012bf312d26b172243722146d2a2823c72e3338ac54027b09e966fb6f1f064e103ff3d5a585b976ba026e4c48fa4f464922b47bdde57a56aef2f614811e121c99af95c254920954c326cb6351b118be42af1972711c26cc56df2befa199e0a413725d9325b31c1db67fee11e114bd930b3a25a2f34d04f74038d515fdd45304d6c47a8").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("886843baad4c56e7c8f10425264f6ead0e67b30e9706c16cf4910d534166e5fe69c9ea0d5bba73326cf97cd1303938344644f38c5b7a1c9ec4a1668bbba7a457fa8c492cf6e7fb5790ed2582ff010acc923ef7838dfe18c5a2bf3998ad681d5bc7b61d89808bc9cee7c2313d2efe36b306597addbeddcf64ca9bb22f5012bf312d26b172243722146d2a2823c72e3338ac54027b09e966fb6f1f064e103ff3d5a585b976ba026e4c48fa4f464922b47bdde57a56aef2f614811e121c99af95c254920954c326cb6351b118be42af1972711c26cc56df2befa199e0a413725d9325b31c1db67fee11e114bd930b3a25a2f34d04f74038d515fdd45304d6c47a8").unwrap();
    let exp = u2048::from_hex("cef6f0b9dd5ec0c982ae18f875ca82fd430fbecdd8004b82213a5afe7e471109b2f619be089be1d8f4deb92049359bac86404a9119c586669cf6897554cee38092364b4d3b7bae89b4cb81524263c2be30b1b9dc822bf9328a107a1f90bea34e1c8062e0c9e1e4539c06d3713e610cc69d6a6248d0b4647add16b6726320e5e2b31fa8e19c86e27689cc88d9d7eeb512bfa914fbd00ec20ff1f11879547429970f608c9071622cf432ef845496702a58d90643ec0e7bfea5c2659448628421c08714c38560d38524e7c40736f0a77ab0a4bc909e46a274db9d21eb77bdc4ecd60d3e7a0d95998a5d16c5bd7f712ca09036dbce3bf78cb9951827d55186032fd").unwrap();
    let mod_ = u2048::from_hex("339003a8f10f75c52d41987dd3a04375dc8ad4d1daccaa98ab36a26593d9b5ee28e388876ff6c2d7ad9750bbd947f52236031971afd50e4a4ea93ae285d1df291cd00e1457943a7d41472a25e72b9e6f61a9001f72ffb31c1bc802e96ad467d6b4baa9993eb4d281e4672ff74c34b3d9bca04132bb9040d215496f7afcdb9ea87ee4da3e73d0bae2a2fbede340edcced362974b3f266f271d164012dc16e6105b70057c3db7e74cb193ec01e5f2421dcd1fbc3a263605d0792eab31699285fd0fba4395b31d011f2d9890586b2eb98a6adafd52a8b2cbd11abe528b83901c19cc36a42531525caf176c66d4a6a373d9232ecdac4934e41a8101ba6d9fa31166d").unwrap();
    let expected = u2048::from_hex("e0b12beaafacae42385fe6a7bb1aae51f849d3fa57cca38d295ed431435a92820e3b8f36c7320132a4522c36e6741cc649e29336ed818a7f799dadb381a3153b00a43ccd7160a94fc8e662f55a2415ff85e63049212fa066d7b4e7757a9af93b940bfef0c8f049c0c7c8f62c89d6dc0c0c3025509cf3b155008d8f10ec94a743c9113a86feed955712d95e1da7b2dd6d5c295ea5f311ae99a71bc07f0666f0a85a21175e2ac2068afdd0e710c0bcd52b39b52b36e01411748d23c0ef32b2ec4a73a11653e2c70da14e2b384fa666a7863c457d0ddf1d8794ace36a20e21d0ce37e2deb0a78dac052ee192a42f70160fa23f4b7807461cc0ebfcf1b5c9da3985").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("6aeeb01647c78a89b0847ec9d2603258c9fc763e040bd21f083e8e3f9cfea64879c21a67c1f28ad5558014ad650af8a30274dfcc1807105d02dde0aaee0b224e9cbb1aca2405e3621a4608101a8030c67154c3b6190709c644a41f6e678019fb5615f60253b35f4f4f113645f578ed5e174ce823293a531ecf05f7a5ec2a2d50bba4fa7a95ca8dd423ee0d952ff3fdb5e7f95547e242f402f8a2102c67a68b407ca98a3ebb98066d4d313ace04b4025d69448642e868e6fa07eb9f9a1813ca70c8d01885f0544edf725abf8304700e0614d02adef6e06b92cb6912a1d02a47d9af960dbfab2b9378034d945a88aef4ea33526cf5523e9ff831105ba5e07ae46c").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("73ec727a057d5bf491a6d5cf0a700325ccd16fe5f1869fb7e9aa811c933527364174e0d62027721860a222818bf793f33919f04285ea7e940fda7cb5722caa3aa120c19a1671f78d3204d662f7a3b7409cb5d0e8caf85951c515031e271c633f766c0ba784f6c0d7110e4679d27d345b5044fd489b492e444269a0997185d9c63641846bf6976060be8a9deddcafb56bb447fd0d1c94f82f536a177140365e4608d50bc69e4a54f646c8f75bf688bfdb1291c68fafed61a68b6503b5c278bc4844ee0557b84ca7bfac5dad951d516205f1596887f9997349723b13b1f9cd7df73c28acdbf9ab7deedbd27bb17dcea9f9c6d1bf894e28ec8be73d4bb759399ea5").unwrap();
    let expected = u2048::from_hex("2779453d1a0c8b83a3cb9e873f49a150bfb6b03197c6b98f0684aa7d648cf5af01aaa7a46c5715c91b940ddcb5d5be869013dc46ed5286fdbb186291547d86ff29958c56cf58ec9aff34df9b554016f84e52d22eaeb6c5a8fc7ef9e04a30e5dd70ead5258ed2c8ebf6addd0e403c7e91409a5e83a30286e58b8ef923c90182739b575f8cba8b53db3edb8ff0b85a5cd6a62ddb5d4121064e8e49fc36c45a9885a65ece94a5bffb6e72b5a9954b7bdcb8e2a113e73d181cfec125de552ad8aeaf599923c53eb7b0ae707844d3ee4469c6b99a33f9b671534c6d15eb10a480804749b170b1fe5e2e77f87a726dbb1abf2c703d9b05513a29417d4169d59b140232").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("2779453d1a0c8b83a3cb9e873f49a150bfb6b03197c6b98f0684aa7d648cf5af01aaa7a46c5715c91b940ddcb5d5be869013dc46ed5286fdbb186291547d86ff29958c56cf58ec9aff34df9b554016f84e52d22eaeb6c5a8fc7ef9e04a30e5dd70ead5258ed2c8ebf6addd0e403c7e91409a5e83a30286e58b8ef923c90182739b575f8cba8b53db3edb8ff0b85a5cd6a62ddb5d4121064e8e49fc36c45a9885a65ece94a5bffb6e72b5a9954b7bdcb8e2a113e73d181cfec125de552ad8aeaf599923c53eb7b0ae707844d3ee4469c6b99a33f9b671534c6d15eb10a480804749b170b1fe5e2e77f87a726dbb1abf2c703d9b05513a29417d4169d59b140232").unwrap();
    let exp = u2048::from_hex("10935faf18f7dadd36b26f622270efd248de2dace88342754ec125a30b5d8f54cfb941a8fc82076b7aedd417480747ad809db7e01b3bf38b8254d07e356c338f1c990d75d5fdc7d2f5b30160b75e3e86cba1a7d491a93f4454f4f3342d8d7e97857c5f923d8df6f709a64be781748bb6fedc4e8742450d8b8f1f816a4f743f364a0322b0971a247ea2dccccd925725e165ee748e034eb2830195e485c25d4ffa6b91f4ebb1a9118c2db750ac4c9b047edfd02878199e3cdb4a6060ee356063ddb4bd61b778d8cbc7cacdf12a449a288726c950f91e7b461d3c7ff0b21e8f00525be66f25e439735333c4094eecb052a04e26437ee33182c6d2e6adc5112a15a5").unwrap();
    let mod_ = u2048::from_hex("73ec727a057d5bf491a6d5cf0a700325ccd16fe5f1869fb7e9aa811c933527364174e0d62027721860a222818bf793f33919f04285ea7e940fda7cb5722caa3aa120c19a1671f78d3204d662f7a3b7409cb5d0e8caf85951c515031e271c633f766c0ba784f6c0d7110e4679d27d345b5044fd489b492e444269a0997185d9c63641846bf6976060be8a9deddcafb56bb447fd0d1c94f82f536a177140365e4608d50bc69e4a54f646c8f75bf688bfdb1291c68fafed61a68b6503b5c278bc4844ee0557b84ca7bfac5dad951d516205f1596887f9997349723b13b1f9cd7df73c28acdbf9ab7deedbd27bb17dcea9f9c6d1bf894e28ec8be73d4bb759399ea5").unwrap();
    let expected = u2048::from_hex("6aeeb01647c78a89b0847ec9d2603258c9fc763e040bd21f083e8e3f9cfea64879c21a67c1f28ad5558014ad650af8a30274dfcc1807105d02dde0aaee0b224e9cbb1aca2405e3621a4608101a8030c67154c3b6190709c644a41f6e678019fb5615f60253b35f4f4f113645f578ed5e174ce823293a531ecf05f7a5ec2a2d50bba4fa7a95ca8dd423ee0d952ff3fdb5e7f95547e242f402f8a2102c67a68b407ca98a3ebb98066d4d313ace04b4025d69448642e868e6fa07eb9f9a1813ca70c8d01885f0544edf725abf8304700e0614d02adef6e06b92cb6912a1d02a47d9af960dbfab2b9378034d945a88aef4ea33526cf5523e9ff831105ba5e07ae46c").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("748cdfa588aeabca68bab409d38773a3f5695d64d124c68d94de682ee44cddf152d9d319dd4d8d2902ce568f5042f1e6b7dfcf0b460546002422227016bef6c16cc441290ba5ce81ce88a33ab47644c99788e2a74c4231064e247c38ce9df60fdca01307e0c1ddcc708a2f5057d76bb33eb6b2305c38159804daa5decf94549a85814a7f73c35defb8e13b338c907c796d93a4c6ab9fc40891400de2d812794cebbd665779e61e15cb2e23fb15340e6209d432844a2ed297a6ec4baaef760d92222dfb6badac8aac2949252afba0883191dcca8887ad4fd0259d002eb089cb48f36d6f69d65f19afff30320dfcfc3d581dd0c7fe245a91ea59e31a4e107770c0").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("ada2854f92f847732c1edea65f55cddc62a64b43b930b540f956ef1ddd19ee035c2550ad6563722b01a368729008c01d459354a79a3d15b6d68fd2ebc72bd7c325bb8d9cb8357d2d80ca62ccc022b4371454b16bbe453767306e9622e5727ae053f7a7a2bee28864f8281dd25ea63d4874c8b90b2c57bee1847d0d729ffdb0ead119df648c19c3af6142826182eabf42fbbaa4a5c2ab22d2aeaf859bf168ffb7fb3477ecc6e8cb5d0024f6c85af962bbe70a11ef938f96eabc7e1626f7568ec43eed34815c9536a8fec6b3211a6e6303da9ef1838e8c103af2a33b6eca6b2dde50fb2bafe62f8ccfafa8449954b407bf1274ad9669828be4ccddfcf091a26bbd").unwrap();
    let expected = u2048::from_hex("47268ee14328f921a9dd7e5737267a071b2392b46aec892411eae9d8541745e23deff53b4d13c2f984839bc2b0567bf1f6d0e982d8b03fa9b33b31b52d270a8e1eaa98decbcd0349e916c92cbc81b51089eaaef27e953d1eeb2a60b760c8488a66bb89274d97bad6ef54f46661a27663db47214a7a4b834e465a8f6519afb43f7aa96172c58cfdba58518b6b65ef2a66471bc79cc1ffc2824de24d5eaef1d314b59211e37599d1b163f8cf8d8e0fbce3371d4de56e2aaad064678eb7cabd26ed22f701a4d59a829b7a8a2b4f31dd7aeb0a72d9721e6b67d0e0d439de6ec2f62e12436af0c9fe928d321d9cc71d5f18bc0e4a5dfdf8e025bdfe9f9c2d2c0563df").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("47268ee14328f921a9dd7e5737267a071b2392b46aec892411eae9d8541745e23deff53b4d13c2f984839bc2b0567bf1f6d0e982d8b03fa9b33b31b52d270a8e1eaa98decbcd0349e916c92cbc81b51089eaaef27e953d1eeb2a60b760c8488a66bb89274d97bad6ef54f46661a27663db47214a7a4b834e465a8f6519afb43f7aa96172c58cfdba58518b6b65ef2a66471bc79cc1ffc2824de24d5eaef1d314b59211e37599d1b163f8cf8d8e0fbce3371d4de56e2aaad064678eb7cabd26ed22f701a4d59a829b7a8a2b4f31dd7aeb0a72d9721e6b67d0e0d439de6ec2f62e12436af0c9fe928d321d9cc71d5f18bc0e4a5dfdf8e025bdfe9f9c2d2c0563df").unwrap();
    let exp = u2048::from_hex("4b111aec041b82b30592c854ca9d4b45745620994429b80841c3ebd77ab75dc73b6c8681f0761b4301e4fba04bd4fca455bd69b9415d6ca881ffe6ad8de0ce8477d3ab583896276ad210ad6b87c579298c3346b67b5416ad18ab36b81a2a717a7a7d748ea4fd45aa76a976a5c9cb0fc390cf169bab580ec0c0deaf9456c6ff024d04f822c14d601ebad5484d53283168b61a9ebe7f6bb2f04de7818140347d93d8ad175c8d05c251df1d0a42876a8543f4885e49362d8b7f4392f793d3aa7535e8e9ed3c8c1aa3d8eb01c845f7f7b1ddd8b8773551d42aff1bc1596ad267d1f9f581fe4da01f453224aa37638824720e1b7afebcf401e65548fef143d9d3d81").unwrap();
    let mod_ = u2048::from_hex("ada2854f92f847732c1edea65f55cddc62a64b43b930b540f956ef1ddd19ee035c2550ad6563722b01a368729008c01d459354a79a3d15b6d68fd2ebc72bd7c325bb8d9cb8357d2d80ca62ccc022b4371454b16bbe453767306e9622e5727ae053f7a7a2bee28864f8281dd25ea63d4874c8b90b2c57bee1847d0d729ffdb0ead119df648c19c3af6142826182eabf42fbbaa4a5c2ab22d2aeaf859bf168ffb7fb3477ecc6e8cb5d0024f6c85af962bbe70a11ef938f96eabc7e1626f7568ec43eed34815c9536a8fec6b3211a6e6303da9ef1838e8c103af2a33b6eca6b2dde50fb2bafe62f8ccfafa8449954b407bf1274ad9669828be4ccddfcf091a26bbd").unwrap();
    let expected = u2048::from_hex("748cdfa588aeabca68bab409d38773a3f5695d64d124c68d94de682ee44cddf152d9d319dd4d8d2902ce568f5042f1e6b7dfcf0b460546002422227016bef6c16cc441290ba5ce81ce88a33ab47644c99788e2a74c4231064e247c38ce9df60fdca01307e0c1ddcc708a2f5057d76bb33eb6b2305c38159804daa5decf94549a85814a7f73c35defb8e13b338c907c796d93a4c6ab9fc40891400de2d812794cebbd665779e61e15cb2e23fb15340e6209d432844a2ed297a6ec4baaef760d92222dfb6badac8aac2949252afba0883191dcca8887ad4fd0259d002eb089cb48f36d6f69d65f19afff30320dfcfc3d581dd0c7fe245a91ea59e31a4e107770c0").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("1b19533832a1399b27dad79737f4820b7f4a5752dc9a6537a770d0905213a961a657041e9e169370dc292c94c454a6e11065da555726923578d09b80f562b451c8cb48a626672120d1213f9a29baa6fc55fa77c8fccc088e1e971db144d369ca195474a4647a651b2c2b20a1c4c5f3e13a40f936cdaef7e5de5693affe7b00d69e5e451b319d341a381ed02ff04e4ff3cb64d4edad49efccc3cd3ec5cce67519873b64851639ff705a4c9f8f62f6457c9cbbc9a4f09b56a42d06be6f0a9adba1341f7f4f0a71bbad7862364a0ad586af2ad50be547d4654c3124689232f387f4332a561b065146eb8b4eff8bd0a0c63a5dda806e19026475aef4d63c43168d6b").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("34dd394afbb4ea2f3e73a175c1798708e657bb08fb792984d79f5203970daa999cf5ac75207a3b00283d5a5448817d3d51f84403e187e9a04ec78dce1c76d996bfa20535c797d52965be9b8caf7ee7d3d6674aa2c467c95b7fee03d126df7acd62268ceffc8076a20abde14279ea02560c2893ee027e793100e268f85be6826ac6325ea7df3bba394d8ccebe1954eb4f92a40311965156736dd5a6e7ea941be52b2131ee2972fcce33126daa8339944452ead23c11c5abdb516324b5c9fe26889de6e80e0f3b9e6d2868e3a4785044253afd865b3a3e01c8571676c28a0dbe0b7f0e520c899c0d909ec64d65939464af4deff3bcda8504c6470ce500ee6e2ad5").unwrap();
    let expected = u2048::from_hex("16812ddcbabb8706664cb31e642608d92b780109650a675174da51f5464fe13d5a2bb5fa1bad83a18009d38af8944302f0526fdc52fdb69e145d7448be64b132156f532736b35a97b10376d5d58197a6a8bd4c42f8e887dba7b5e8a03a6a232d8156e572d1dd655a63d99a34ec37b289c6ebba5ae40c3dedaecb289309eefe2d604ddaf15c306e9f660c29da201b5428d8e7368730d7c6a58b8f41518dba39b706adf21d6a737d558786661af4231a28324808d64b5ff46aa479b2ff62f69dce87963d3a59f6ab41c8866306301a01586d34714f2cec2bda1f5a4c46e5fc01479f1cb036dad77ae8fea0794ee755bafe7f9682832042b6e421703e89cf14d58f").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("16812ddcbabb8706664cb31e642608d92b780109650a675174da51f5464fe13d5a2bb5fa1bad83a18009d38af8944302f0526fdc52fdb69e145d7448be64b132156f532736b35a97b10376d5d58197a6a8bd4c42f8e887dba7b5e8a03a6a232d8156e572d1dd655a63d99a34ec37b289c6ebba5ae40c3dedaecb289309eefe2d604ddaf15c306e9f660c29da201b5428d8e7368730d7c6a58b8f41518dba39b706adf21d6a737d558786661af4231a28324808d64b5ff46aa479b2ff62f69dce87963d3a59f6ab41c8866306301a01586d34714f2cec2bda1f5a4c46e5fc01479f1cb036dad77ae8fea0794ee755bafe7f9682832042b6e421703e89cf14d58f").unwrap();
    let exp = u2048::from_hex("63bea6439cfa9683ddca3f73f8425d4fa58f1310b7acbd723186233132ea4e62d98d9280cd6ed3b45038b31f244f6f072c8acb8aa717d2f0eeb408144610da2d5e174ecd5274617762ca6aa4e0dd0a7ee1a4b366ba3f39e6b3535d505d907e1cd87cf4a03c46079167c32e2c47ec09cc61d48e8a1f9a9300ab3287ed553972083f23e11f6e3d66e0497d1820c88c75e2336895902a4a53c5a73ea5b70b0130dd5c3c911503c911f4ae65ad4a6eed277ddb3b8bb4f3a661fdcacf37a3cc7f38e7ed06003c2191ec3e847524b2d3e90dd475639263926cb938cd3b59b1b07c32a9b1cfa5f7b613f6ee47290f92ab09d85bbbd3c207dc9e5bc4124f0ba477f8827").unwrap();
    let mod_ = u2048::from_hex("34dd394afbb4ea2f3e73a175c1798708e657bb08fb792984d79f5203970daa999cf5ac75207a3b00283d5a5448817d3d51f84403e187e9a04ec78dce1c76d996bfa20535c797d52965be9b8caf7ee7d3d6674aa2c467c95b7fee03d126df7acd62268ceffc8076a20abde14279ea02560c2893ee027e793100e268f85be6826ac6325ea7df3bba394d8ccebe1954eb4f92a40311965156736dd5a6e7ea941be52b2131ee2972fcce33126daa8339944452ead23c11c5abdb516324b5c9fe26889de6e80e0f3b9e6d2868e3a4785044253afd865b3a3e01c8571676c28a0dbe0b7f0e520c899c0d909ec64d65939464af4deff3bcda8504c6470ce500ee6e2ad5").unwrap();
    let expected = u2048::from_hex("1b19533832a1399b27dad79737f4820b7f4a5752dc9a6537a770d0905213a961a657041e9e169370dc292c94c454a6e11065da555726923578d09b80f562b451c8cb48a626672120d1213f9a29baa6fc55fa77c8fccc088e1e971db144d369ca195474a4647a651b2c2b20a1c4c5f3e13a40f936cdaef7e5de5693affe7b00d69e5e451b319d341a381ed02ff04e4ff3cb64d4edad49efccc3cd3ec5cce67519873b64851639ff705a4c9f8f62f6457c9cbbc9a4f09b56a42d06be6f0a9adba1341f7f4f0a71bbad7862364a0ad586af2ad50be547d4654c3124689232f387f4332a561b065146eb8b4eff8bd0a0c63a5dda806e19026475aef4d63c43168d6b").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}

    // Encryption
    {let base = u2048::from_hex("7931e279bf8c3f56f9dd0298d68ddce8653597a92e6353ead26a9412da362b6e956ebc13c724e97ad9e2bf612547b8850f19e4301c7296a95b3839b9ac94600ac5677e3aec2180dc9e9ce42734cab46e6639b0e46c9dcf755fa8038314e0fc769508051cc185a6f87f3f9e55890d81b128ca1bfa029f384a34128b4ea05ba0c82c05f47ea0069613fdf8096dfa68bb12136213593b90d32c5be1ce548d562350046c33b7165d39c90e6cb35f00bda4ede211e85c151d3234e748420617882afe2f4b6c58969637e11c900a3e777fb95ff58a63e2431371a0f691ab84a9d07c05ce9f6287195e2de27384e4620324f0b225308dac4885750e31c18a20f27c81b").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("185a0f0e622b057395dfd1df670b1daf7043c4db94f73a4303cae1f398eb1847064220c8244d29003f1ce1add62170468e5bf5a78a1bd52e930c01feba54223d53348894fc7b9e8d8f2794b9536e6a464f4a150374108e46eb5f9f7c61a8385951d922a9b8d323ec1c398eb75dfbc47ce0365868f78571658f34fc3272ecf95a1df04ba5f44bb7d526925d3bdd5b0c6df639610b10ac6a04bf85751a70d66edd0dadd554377b6bf0bfcefe0ce63ee66ada95c766066e1ad0fdee6876886826a22b155f429e9642bf7e4403d5b64db476574230d795df07610db097b001c96c0d982ce7185c458bb80552d650bd85ad334ba17c956e99b937a7d83111de53e309").unwrap();
    let expected = u2048::from_hex("43224c1e56d25e48b8a6f7f0281003e5df4cac92f1b74cafe1056848420e8a1015747b9ca930702543742fd76b2a4164c1cc61d93abfbafff02bda72e6f8f8b59354365176eead94a1a2ad9976c990200b43bc9ed6a90e873ef9f03a35549b07789f0d06fbcfd8cedb0ea0feea0571b20c3a7ffd8b8b6a4b7b11c3b53e00202f0260f3e51fe0ad8871ce364c700fb3c66ddfbd84d3aaed94a5888e1b53bfe51ab5a7bd2154eead3f2e6689e5afe0c0f72067e78912bc9d7067f771bb97b49d0522608f24d6217cb0bdb45d1085dc872d69c3ef37f5668b4d3ea1d94b3f679c55617227b473eaa84c1ff5702ad2205789a0b2ccca20891851309c06981012ff1").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("43224c1e56d25e48b8a6f7f0281003e5df4cac92f1b74cafe1056848420e8a1015747b9ca930702543742fd76b2a4164c1cc61d93abfbafff02bda72e6f8f8b59354365176eead94a1a2ad9976c990200b43bc9ed6a90e873ef9f03a35549b07789f0d06fbcfd8cedb0ea0feea0571b20c3a7ffd8b8b6a4b7b11c3b53e00202f0260f3e51fe0ad8871ce364c700fb3c66ddfbd84d3aaed94a5888e1b53bfe51ab5a7bd2154eead3f2e6689e5afe0c0f72067e78912bc9d7067f771bb97b49d0522608f24d6217cb0bdb45d1085dc872d69c3ef37f5668b4d3ea1d94b3f679c55617227b473eaa84c1ff5702ad2205789a0b2ccca20891851309c06981012ff1").unwrap();
    let exp = u2048::from_hex("9f710a23a2f3b6934090616a8518c31a17c9a04f6ce14dc1cf9311840ee33b3c783d816642f39d00d5901a1398c857d84a96d101a718ea8cdd3e41d1bf2c1f03129c0eff6ecea27d3a51c349a9d073059275fb75764f9a95be322f355f898d689aa94320ff2ec884fcf3345265898ece11e5c1f82eaeb49e6c8854bbfc13f135cdddc61fb46064058dff5c35208ae6be039e587101692c60c5d6e59b37955a957fd96120612e634ffcfbea12e212f13e46bed525ef4946b24956e004abd84c8115a7158f10c1055bcc893b0985a96f441da6a93bf24571d72e60b589a9093f31452d4d967dcb80f5a8ab4668070ad9be4000fa1803564b88400e4f2cc34619").unwrap();
    let mod_ = u2048::from_hex("185a0f0e622b057395dfd1df670b1daf7043c4db94f73a4303cae1f398eb1847064220c8244d29003f1ce1add62170468e5bf5a78a1bd52e930c01feba54223d53348894fc7b9e8d8f2794b9536e6a464f4a150374108e46eb5f9f7c61a8385951d922a9b8d323ec1c398eb75dfbc47ce0365868f78571658f34fc3272ecf95a1df04ba5f44bb7d526925d3bdd5b0c6df639610b10ac6a04bf85751a70d66edd0dadd554377b6bf0bfcefe0ce63ee66ada95c766066e1ad0fdee6876886826a22b155f429e9642bf7e4403d5b64db476574230d795df07610db097b001c96c0d982ce7185c458bb80552d650bd85ad334ba17c956e99b937a7d83111de53e309").unwrap();
    let expected = u2048::from_hex("7931e279bf8c3f56f9dd0298d68ddce8653597a92e6353ead26a9412da362b6e956ebc13c724e97ad9e2bf612547b8850f19e4301c7296a95b3839b9ac94600ac5677e3aec2180dc9e9ce42734cab46e6639b0e46c9dcf755fa8038314e0fc769508051cc185a6f87f3f9e55890d81b128ca1bfa029f384a34128b4ea05ba0c82c05f47ea0069613fdf8096dfa68bb12136213593b90d32c5be1ce548d562350046c33b7165d39c90e6cb35f00bda4ede211e85c151d3234e748420617882afe2f4b6c58969637e11c900a3e777fb95ff58a63e2431371a0f691ab84a9d07c05ce9f6287195e2de27384e4620324f0b225308dac4885750e31c18a20f27c81b").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("25c142192356c42ab24da95dc76ba7852ad04c60922ba250da23a606a7438890d2a529807578b1cabbdb292eb57dfd02801944c31a68e7e1e96f3f6ad7c6cae0fae0546212994398a5f25b7e48f70884d58958e0f5fac96e564f8e416c93eb0d5f8847f687119e98891908d50a88cd5969ea8481ed4d001859c8ea837e56e2cb4b0a75120c0d5bf07eb630621784ec4841d57bd48290f5c04843c3ab9df20a0237803f777151a80c67f6f0d5dbace0df9ab79c0f69284273722258d0f21b8a7b8fba6a5fc0bccb7ca153c3339143b4110708f8145514319192e1919d761b4911698790943c50e04252bdacc86b669a3a185ccbace488d141a6e01b5f778302b3").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("27129cfeba1f45b5fbf68a8ce84a559b6e2e7ad68240bf644ab67f604b37051ee3e0ad23fdd79d5f2aeb320f85dbf0f95f5484aae49e4a2728a089b3a7e527b87efcdd460a373d45b0bd82d49ae3e821f7c7924fb10dd1e29142956a4a7261b3726362f45f2edd9918883171faf5d6999da1d50d73c638ce7c89c475470125cbf399a65418136e468a2d9f839dd46659313dc0c594484b0f716ed5c42a5f88033f943ce0fdd0266bbc196184203ef6b5cbf0237b9b58050d50af46364c06bb09df53b4397cc7d2dbbb45ee6097054b5b33ebc4e51f46a65f3b5424fe86429f789a65214ecb69af79f4a1828d82769060c138dde6564d55ef3d59ec9601704555").unwrap();
    let expected = u2048::from_hex("170ebb82fa8a6cfba9da25307c1940a7cae8ba64d4d00ae68afca8f6b72ba36ea46681ea0e8b97dd6de561dc386bc463cff1494f046828fb6bf430696526fc149bd36e1cdf7025bb4f4e8415b78eff1e93436cf0e34e061c3a9a511761ac2d704651cdb7cac1903cc9cb298775576e0252fe97bec3e380d984e6befb1f4b67468f9b38b1063ce789743a562ba380d1ff64737562d2a7197f726e327e8340fb83d21cf7766d7d8545f85f296b86eb2efb1152015edb0d8ac2f6c83e9e26d1c62d516938d7fcdda198b9af0f5227557110c68ea518f1bf2f2851d7f42376fa485899d83b1e44c23ea4ca7bc3d1b787cf6db76817fdfc95c178bfdfe28f17575bbf").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("170ebb82fa8a6cfba9da25307c1940a7cae8ba64d4d00ae68afca8f6b72ba36ea46681ea0e8b97dd6de561dc386bc463cff1494f046828fb6bf430696526fc149bd36e1cdf7025bb4f4e8415b78eff1e93436cf0e34e061c3a9a511761ac2d704651cdb7cac1903cc9cb298775576e0252fe97bec3e380d984e6befb1f4b67468f9b38b1063ce789743a562ba380d1ff64737562d2a7197f726e327e8340fb83d21cf7766d7d8545f85f296b86eb2efb1152015edb0d8ac2f6c83e9e26d1c62d516938d7fcdda198b9af0f5227557110c68ea518f1bf2f2851d7f42376fa485899d83b1e44c23ea4ca7bc3d1b787cf6db76817fdfc95c178bfdfe28f17575bbf").unwrap();
    let exp = u2048::from_hex("30f4c97100e8f35789fee6aa96d84cb06b3acc5414453c345573448b4ab2ad8a7ecba1cfaedc31cfc434328d45e8c68e2e3bf533dfda7fded606102de24d904498180cc7c2950eadfb3d4dbd458ab9ed95a04bafe8e5554d79e4362cefb5516548b5ee8ec7942e63b20688ad8a5c977e9d0635af47edddcf7036237483d03ef778dd8683c0246ac2d44dad4bfeaf71e9f8ee16298fe8e2ba90ea152227e3930f83b5ad1aa139c6f6c3586cc486b707109d143c62db6333810434bd22f2e0142e0117f5745820c85baff0f3390f2746d5500e6a9accd18de2996407c7adadec31f1893aa93d5b95c5c8c6e9c6a246ecf413e6f6e3a05ba335705fed484cdeb63").unwrap();
    let mod_ = u2048::from_hex("27129cfeba1f45b5fbf68a8ce84a559b6e2e7ad68240bf644ab67f604b37051ee3e0ad23fdd79d5f2aeb320f85dbf0f95f5484aae49e4a2728a089b3a7e527b87efcdd460a373d45b0bd82d49ae3e821f7c7924fb10dd1e29142956a4a7261b3726362f45f2edd9918883171faf5d6999da1d50d73c638ce7c89c475470125cbf399a65418136e468a2d9f839dd46659313dc0c594484b0f716ed5c42a5f88033f943ce0fdd0266bbc196184203ef6b5cbf0237b9b58050d50af46364c06bb09df53b4397cc7d2dbbb45ee6097054b5b33ebc4e51f46a65f3b5424fe86429f789a65214ecb69af79f4a1828d82769060c138dde6564d55ef3d59ec9601704555").unwrap();
    let expected = u2048::from_hex("25c142192356c42ab24da95dc76ba7852ad04c60922ba250da23a606a7438890d2a529807578b1cabbdb292eb57dfd02801944c31a68e7e1e96f3f6ad7c6cae0fae0546212994398a5f25b7e48f70884d58958e0f5fac96e564f8e416c93eb0d5f8847f687119e98891908d50a88cd5969ea8481ed4d001859c8ea837e56e2cb4b0a75120c0d5bf07eb630621784ec4841d57bd48290f5c04843c3ab9df20a0237803f777151a80c67f6f0d5dbace0df9ab79c0f69284273722258d0f21b8a7b8fba6a5fc0bccb7ca153c3339143b4110708f8145514319192e1919d761b4911698790943c50e04252bdacc86b669a3a185ccbace488d141a6e01b5f778302b3").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("203d6b28ab2610fbf1df50684eed3231cedd4fc3d7ac3f910f94835dd24b9959aabc2ac1eeb9a56b9f14687c1b2130e29ac7a8918fb457dc6ec7cbda32441d0743f6f458cdbf08f41e6eb8cfef3129de1718e60dedf958ff7bdc0c1e686c6fa93280362acdbc9025ac4d213d8fbf73c1e3609a04b377286d1a378e278cced312111398ac4cc413d0b06a547f029dedd48f97f1a305cdc6dce3ce04e06f2b6b01c1fb3bf6286a3b693865eb38c5cd1eba16c6f156cb02b8ffcb6c72920e6f6f3933b30ae2634787fe2d13b4db6b22f1ad1002e56eb975b65e75b6787f178bd6b397a1a55ee2cfe916571281f96426e481973460ff83fbc86fef3110e5f73c1c00").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("20592b75d713a012de6c3afad3fa957b821989c0cc529349a08ec8d240eef52e711fb20b049efe3711aa082a66b427ced1fc8d58b5b1e06093c31917b956c1ab9e0e8d4cf0fc96e66f31dc5b04e17ca963ba1578915de8c0d9226b682a36a7faf4f2bf4541d66906e8fa3e3976a0ceccee89e68264e4a137848e015738c18c47cf83c697e2130504d871be1a2070553599cf161970c21460f5bd7ce332f03df291527c015ac4726435c0205204bc6d5b6ba56352c6822b8cdd66ace5de23c5c5517f9407b6ab8ccbe5796006119a6362fa8e476f9754afee940a651e0b06d039104a78f9816f4b05883589e643614f4d712ea79690ec42879cb3565a53670e0d").unwrap();
    let expected = u2048::from_hex("e1aad39e5cc10664482155ebe80b7c57098dbb58fb8c2d72be25a1933420cabcf16dce1ff7930a63dc1f54426f54d45ab0082146dbebae648e147120193910b23189bb5f962e0d02290b3cf33d979720ad26384d58b718600a3b622f23f652ec2302417a3be3d83f8490f67d7b800f558d0c2bd91e29d97158c37b6f8340b9b851cd30e37478b2e12f64dae50486a2a391abb5ca5937e86a7ca270fab44e59eb6eb30194f8224d0ef15fe32150360bc0de289a97b78615e701efdd0f9527f467aba5187ae7654740c9e59639999ca6ac6f6bf67b06615164515d00f5439965cb06c632fe4167337ace6af6fe0d6e62ac4f39f2bc2bf08b27cb6679b16d4b2d8").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("e1aad39e5cc10664482155ebe80b7c57098dbb58fb8c2d72be25a1933420cabcf16dce1ff7930a63dc1f54426f54d45ab0082146dbebae648e147120193910b23189bb5f962e0d02290b3cf33d979720ad26384d58b718600a3b622f23f652ec2302417a3be3d83f8490f67d7b800f558d0c2bd91e29d97158c37b6f8340b9b851cd30e37478b2e12f64dae50486a2a391abb5ca5937e86a7ca270fab44e59eb6eb30194f8224d0ef15fe32150360bc0de289a97b78615e701efdd0f9527f467aba5187ae7654740c9e59639999ca6ac6f6bf67b06615164515d00f5439965cb06c632fe4167337ace6af6fe0d6e62ac4f39f2bc2bf08b27cb6679b16d4b2d8").unwrap();
    let exp = u2048::from_hex("1059564075e0a803e1566218be0f8fd7f4510e9b85538162b23b22a98bc28f3857043b3ff0fdf50dc567b7937684e6f9a88cdeadf9bc04e32020780b7d7dfe342140c98ec6dd6286e4516c455eef77c9ef6a9a74c298ebe1f686bc32268e53d28a54daf16decfcf7f917eb605a37114de736db1706ac66aeb5d7ef9032fc89f68b6554a67a1c6549725077ee28a688fe116a47ac3a0ec9c7e0c1c2ef3ce9a91930ad7f2ea96c154e7bc0a62b1dcacf39724c9ec55e913acefd1bd6a4c8eb20262a9aee4dc54ed0d5501e7ef588c9d238ac669602b82733840ecfa7d53600804e399dfbc9635d0e235208535f051d163bfa1d46877bef42c1f8e829159a69de3").unwrap();
    let mod_ = u2048::from_hex("20592b75d713a012de6c3afad3fa957b821989c0cc529349a08ec8d240eef52e711fb20b049efe3711aa082a66b427ced1fc8d58b5b1e06093c31917b956c1ab9e0e8d4cf0fc96e66f31dc5b04e17ca963ba1578915de8c0d9226b682a36a7faf4f2bf4541d66906e8fa3e3976a0ceccee89e68264e4a137848e015738c18c47cf83c697e2130504d871be1a2070553599cf161970c21460f5bd7ce332f03df291527c015ac4726435c0205204bc6d5b6ba56352c6822b8cdd66ace5de23c5c5517f9407b6ab8ccbe5796006119a6362fa8e476f9754afee940a651e0b06d039104a78f9816f4b05883589e643614f4d712ea79690ec42879cb3565a53670e0d").unwrap();
    let expected = u2048::from_hex("203d6b28ab2610fbf1df50684eed3231cedd4fc3d7ac3f910f94835dd24b9959aabc2ac1eeb9a56b9f14687c1b2130e29ac7a8918fb457dc6ec7cbda32441d0743f6f458cdbf08f41e6eb8cfef3129de1718e60dedf958ff7bdc0c1e686c6fa93280362acdbc9025ac4d213d8fbf73c1e3609a04b377286d1a378e278cced312111398ac4cc413d0b06a547f029dedd48f97f1a305cdc6dce3ce04e06f2b6b01c1fb3bf6286a3b693865eb38c5cd1eba16c6f156cb02b8ffcb6c72920e6f6f3933b30ae2634787fe2d13b4db6b22f1ad1002e56eb975b65e75b6787f178bd6b397a1a55ee2cfe916571281f96426e481973460ff83fbc86fef3110e5f73c1c00").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("4624ae79b59a444b175ba31643cf7992e5ffe8f984d35bf370ca7485f8531c28d263cd8f1241075f5a890936d4da6392302cfbba3f5225ffa3310be9e063cec49665f3de459cc494541a2faed9036984710d6d051d169a3ce4cdd8531e74bfab811d5cc1806b025a1e0592f9a8a81973d3e6b4cd9ae8b7ec4d22c4324eb9c53952b9c76c6b12f3b2da53b4fdeba86984baeddeace8729b5157b702a9a685c4252c3ff71e72ec9b7f3c302f2914809ac7c3bdd868985ed08a1114d0bf4a9f4c367f142c0ac9de89c4f92fdfb29f23454b81c35a8ef386c0a7d68301b17f657538ecc042e06bc51a2a12d29cf3508883936a0160630ddf823b35a5205487eab7a").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("a82e40bed9319c1fdeffb64ca84dbf16d294d59de020436ab51cb6ea01e4c5b3af10dd428ee97b7783933b9f676761380426aaa7b55397d2058245665f4ef2817b97e242e04bdba64b13fb322ba83e13dfc4d2b2e59ccf32525371baf9d4ce3dfd8b50a00450ac404a9f6a66c0fb4f6b9fa4fd3b829aeac0834146bdfd4c22ffa7ac23328cf8d66e4b647321b5b0f2d1edd74c4f478db1d7ec4801df0f08f7e73d76930a92e03b23ce307425d653a0d5fbe8913f9b2296a2da73c9be0befdc82bbd933434e70141a9d40084c0725ee81b47b97672223cf31dd904fae444b5b3498e8a84185f69c82f2c508d6001e626f3f63c88ab65cf62c16908bc4f73ff79b").unwrap();
    let expected = u2048::from_hex("82e4fa82668782b76afc1565b7ff5d8d942d009ab051894bc82e8c1e4d91c7395b1af12fe907a861935f458f3680519bfe1abb8e845b5446518350afe76f4fa4e76eb7edcf56c2be9bf45f4e8fd9de5c364ba388d11a1f8a07401b4ad79ab78cdada908487083a343097a893bfdad78ed5c2e916001de71a539737e1b890a7e2bcd99a8d9ae1afdb1abf31cc0e769b65d424778ad8dd363005461093b91d8cf683630af5d37d34cad83ca7fa08a501574aae8f2fd920f114414153d79874a07fdd3b4b1ddb99ee0fbc6951464acb8af2c81028f2e9a0ad2a6ff6f60398f05c5986562c3c36774693e06e853f0fe2d4a6922343449ea3d1137e8b5172001f8c9e").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("82e4fa82668782b76afc1565b7ff5d8d942d009ab051894bc82e8c1e4d91c7395b1af12fe907a861935f458f3680519bfe1abb8e845b5446518350afe76f4fa4e76eb7edcf56c2be9bf45f4e8fd9de5c364ba388d11a1f8a07401b4ad79ab78cdada908487083a343097a893bfdad78ed5c2e916001de71a539737e1b890a7e2bcd99a8d9ae1afdb1abf31cc0e769b65d424778ad8dd363005461093b91d8cf683630af5d37d34cad83ca7fa08a501574aae8f2fd920f114414153d79874a07fdd3b4b1ddb99ee0fbc6951464acb8af2c81028f2e9a0ad2a6ff6f60398f05c5986562c3c36774693e06e853f0fe2d4a6922343449ea3d1137e8b5172001f8c9e").unwrap();
    let exp = u2048::from_hex("186e1f9999934b4a95ea2f611351b7e068d695f1490d66bda9717260abc5bfb24a4bf8d8224a68550417ef2148b40bbb475f168b261bee81e3aaf8c9d62e71abbd7862b5b43f50b8e74f0fbe49f9368b4c861ad541e57573a9e1d53383f715be8b8621401d605aa53c31cc1301158083f1bcd5cc3f3ca1bd3553d622e3189c3ca9eb116c3eb122dea7d617e60e83dcb9506054b6b55f7aeb8b6f7a1856decb50bf850613eed020948ed945c341deed4850665156544251f082b925cdc5236a44bc30483d7e0c8c52e77c703f3fa1d9449908c4392cc0afb90b13449b2fb72349d0756f299b746265b9004f8b65ffcb7460f56c1342937afd4ddfac6b7cacf481").unwrap();
    let mod_ = u2048::from_hex("a82e40bed9319c1fdeffb64ca84dbf16d294d59de020436ab51cb6ea01e4c5b3af10dd428ee97b7783933b9f676761380426aaa7b55397d2058245665f4ef2817b97e242e04bdba64b13fb322ba83e13dfc4d2b2e59ccf32525371baf9d4ce3dfd8b50a00450ac404a9f6a66c0fb4f6b9fa4fd3b829aeac0834146bdfd4c22ffa7ac23328cf8d66e4b647321b5b0f2d1edd74c4f478db1d7ec4801df0f08f7e73d76930a92e03b23ce307425d653a0d5fbe8913f9b2296a2da73c9be0befdc82bbd933434e70141a9d40084c0725ee81b47b97672223cf31dd904fae444b5b3498e8a84185f69c82f2c508d6001e626f3f63c88ab65cf62c16908bc4f73ff79b").unwrap();
    let expected = u2048::from_hex("4624ae79b59a444b175ba31643cf7992e5ffe8f984d35bf370ca7485f8531c28d263cd8f1241075f5a890936d4da6392302cfbba3f5225ffa3310be9e063cec49665f3de459cc494541a2faed9036984710d6d051d169a3ce4cdd8531e74bfab811d5cc1806b025a1e0592f9a8a81973d3e6b4cd9ae8b7ec4d22c4324eb9c53952b9c76c6b12f3b2da53b4fdeba86984baeddeace8729b5157b702a9a685c4252c3ff71e72ec9b7f3c302f2914809ac7c3bdd868985ed08a1114d0bf4a9f4c367f142c0ac9de89c4f92fdfb29f23454b81c35a8ef386c0a7d68301b17f657538ecc042e06bc51a2a12d29cf3508883936a0160630ddf823b35a5205487eab7a").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}

    // Encryption
    {let base = u2048::from_hex("e234866e996eba2bc536c12a7dfdc290004b8231a3cf13da0dfaf6cd271ff90bd23c92a0bb949f096d230527aa5c5d82f4cf851888d0145345276a6be9647ff29c9b08943738d867745724392c15ec1d2cbfc32d54c9e25480b386c37d33da7eeb45df77c1876cfc8f03a6547b108933e51157adfb3a366c7130a57f3b1c27149ba3f8139fd07ccccd4a8f6bdb1a804b6549c8eaf2734c395f697aa9b40d6b8ec527220653762ce9f8ba47f1cd97f7c888ea115c2927c165cca58cebaac8ccf0cf1fc120a0b7b1676083bf624aa4cd24314dd0ec54e8b3b3b57bf36f80849c3a0e5c00b6ee4fc4b707c5ea9569a5df3e3c263b396925a0a39c1b555a14e935d").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("205e804594c26a249adc3c27b96de5bba788c8a0597d5b7304d0cd50940e9603ed55d78e2fdf9ebe78f21f5cefe34c03c968dd623950a8db127457438d35d0a8116dcd5be1df890f7d6fe5b25a288393c670646f4c727f7c4b19aed16eeaf2479b6e3116f4b4e5bb954971d7a30e3981216f7377cd86ac6fb4466e7f8dd1e89bc916f47774318f14b56b8b3735c31c7b72d39ec578bc233fd9bd13400147f0321395d078e3e886ed2854e01bccaddb0ded3d458eb264429409c71ccfe5283cf4a3394a3d55933970806eab7b5e818ecf68348902fb63c76c5731cbec06d72470d00dc380f0bb0342a903f170eb1a93f5445a3e75e4bdc2a1970a19eb7177fb63").unwrap();
    let expected = u2048::from_hex("116e56043567a0e010c53b6eeed9287371c8a4a9bc6dfbce382c5c030648d15580f7ab37c55a1f37b6d7dd8b07788ca9569dc89f049aab14436b4300350b0213d7d123da21f041577d91d7ab7d5c49cece0a6d8388838b8ecf4f37db9cfbd395a18c1b9d7c9e0860d2f6e95e2a6f7d782ba7216d11ef54bb385d0aee1b7067a7e08629c5806772112c0944d4ad969193eea1f204bfbd577d9c678223c62dfe928ac0ada62598bb7e57c6f1322f625348677388278ac179fb57a8886b963dc9a5595d6b419409435e6ec26e08dbd5a09e1d9afe29f75ed4db6f0814ccd2b238677ecb4038c7d7cafdb2d1351857a5918179e5b06c0805552d624e34b569a31c52").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("116e56043567a0e010c53b6eeed9287371c8a4a9bc6dfbce382c5c030648d15580f7ab37c55a1f37b6d7dd8b07788ca9569dc89f049aab14436b4300350b0213d7d123da21f041577d91d7ab7d5c49cece0a6d8388838b8ecf4f37db9cfbd395a18c1b9d7c9e0860d2f6e95e2a6f7d782ba7216d11ef54bb385d0aee1b7067a7e08629c5806772112c0944d4ad969193eea1f204bfbd577d9c678223c62dfe928ac0ada62598bb7e57c6f1322f625348677388278ac179fb57a8886b963dc9a5595d6b419409435e6ec26e08dbd5a09e1d9afe29f75ed4db6f0814ccd2b238677ecb4038c7d7cafdb2d1351857a5918179e5b06c0805552d624e34b569a31c52").unwrap();
    let exp = u2048::from_hex("170b8617591ef0f80ea8d82065615b3b36be538295de81ca6995f416ccd2204bbb751a24c8eb542c176a349a08d007c11fc13646f00caa55b8807680497b698a6948db4e9c89211e3e17f9adf8dcf9e5ae5491020c5342caf84cd8ac3d63ad5fa871287c9ccbb84e2202f561fe073fe4322c699b7f0a6ff48ca1cd99a7c68241931aad6670981f8a30c94a7ad0de389c8600e974757b2cef37e88eda381b53deb22ec32f4645bd37e0847f22383503fec87bbd90f40053370c64f91d9ef13bf3bef7f3cfdecbfeb2e3397ebef1ed55c95e55e8d2b3cead7924968d41256578e575e2e55277bd27f2cc1b5c163880e70b81bbc0fab74bf61ef7eb6638f849e9d").unwrap();
    let mod_ = u2048::from_hex("205e804594c26a249adc3c27b96de5bba788c8a0597d5b7304d0cd50940e9603ed55d78e2fdf9ebe78f21f5cefe34c03c968dd623950a8db127457438d35d0a8116dcd5be1df890f7d6fe5b25a288393c670646f4c727f7c4b19aed16eeaf2479b6e3116f4b4e5bb954971d7a30e3981216f7377cd86ac6fb4466e7f8dd1e89bc916f47774318f14b56b8b3735c31c7b72d39ec578bc233fd9bd13400147f0321395d078e3e886ed2854e01bccaddb0ded3d458eb264429409c71ccfe5283cf4a3394a3d55933970806eab7b5e818ecf68348902fb63c76c5731cbec06d72470d00dc380f0bb0342a903f170eb1a93f5445a3e75e4bdc2a1970a19eb7177fb63").unwrap();
    let expected = u2048::from_hex("e234866e996eba2bc536c12a7dfdc290004b8231a3cf13da0dfaf6cd271ff90bd23c92a0bb949f096d230527aa5c5d82f4cf851888d0145345276a6be9647ff29c9b08943738d867745724392c15ec1d2cbfc32d54c9e25480b386c37d33da7eeb45df77c1876cfc8f03a6547b108933e51157adfb3a366c7130a57f3b1c27149ba3f8139fd07ccccd4a8f6bdb1a804b6549c8eaf2734c395f697aa9b40d6b8ec527220653762ce9f8ba47f1cd97f7c888ea115c2927c165cca58cebaac8ccf0cf1fc120a0b7b1676083bf624aa4cd24314dd0ec54e8b3b3b57bf36f80849c3a0e5c00b6ee4fc4b707c5ea9569a5df3e3c263b396925a0a39c1b555a14e935d").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("4f1ef2611a78018da87b5feba620b98afa9ae50c21175e0d1c5b940e45220c5900573602889ca2c075454efe9a22e4438a21de321ed55aecac4412400dc1a86ce3da74ef1b7fbcbae4d9b345d26aef87344d3465f445bf2e38d68bc80748a610695b2a9465a1e6d9d5ff04209366bb1175a07f786037de573463c2145aa1386dee1e2a4dec8aba4ddb135d2005afa59a3761d5e94fbcae3cf5617d089bd18a422f809054ad019a90ccae4a50d4895814026dab60015fc8a2147061ec97eb60cb41d7b60c993a98c0644f7391b2223edd354ad6e2b84518a842b466feceb1558cbb9212563ded6c302e4ee6d8cf4669f3f8b91cd353993a07fea0dd4fa0ec0dcf").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("544abda20a6ba3bf045b76565ec6940959a8712d5f08d4c05e128637035ea2150ebe2b2dbdafe3e6f5fc405f74af1f7e518735f6461ffa618a6361e61deb2ccc73af6744d8618ac2a9a2ccc4b404e17b53a30df2e1d46dafdd3fee50fd4f3bc638a4e4241cbd0174e93ea1cdbe64fa8640a30ebecbe34b9627aec719a33070a5e33ad1f2082bd8ae8d82fd7f589bfa27a325a74156251a3472f350f192858c3e8701e7136c0b358ef070b456380402867e0454f505cbb997e54f8c754ef75f1d510407eb65c5909fadbcbeafcdbd8a03b04360caecbbfd06603a6ef542201a8e6badedd46974023be5de6f1b0d85af8d2f1c2320c0ad8cbb33cd24393dc9c397").unwrap();
    let expected = u2048::from_hex("ef3cd1ba89d64d896b303c9fd9dfe32bbcf3a128dc6f22ac694cab1e355287d61c8e49e51a4c9ef2ae14d96fb72eea4576975f14ef1d6447dbeecd0f676ddab8ee5ecdd2e5e07a81d12c976903d9d8a67a39d4a78f05f09311b9e3793c840cf40f956db331ceb2d4814dfc482771f038d56d2ffd82247ed26b896821ca65668a6aa87f14acd230c7a09ce608db6ee19beaada304e2d95e1aaf11d11963d9cec647fe49dbd485115cad200ba40ff55c55442bfc7bec9213337750e59ceb799da32ec12d779d4fedcae6f93aaa28ae152855874454375781d9fe846514d208301f5ca7b190b79e110ca4381b9e0c2f4d1354fa9f1ebfd409898a7248241cf954").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("ef3cd1ba89d64d896b303c9fd9dfe32bbcf3a128dc6f22ac694cab1e355287d61c8e49e51a4c9ef2ae14d96fb72eea4576975f14ef1d6447dbeecd0f676ddab8ee5ecdd2e5e07a81d12c976903d9d8a67a39d4a78f05f09311b9e3793c840cf40f956db331ceb2d4814dfc482771f038d56d2ffd82247ed26b896821ca65668a6aa87f14acd230c7a09ce608db6ee19beaada304e2d95e1aaf11d11963d9cec647fe49dbd485115cad200ba40ff55c55442bfc7bec9213337750e59ceb799da32ec12d779d4fedcae6f93aaa28ae152855874454375781d9fe846514d208301f5ca7b190b79e110ca4381b9e0c2f4d1354fa9f1ebfd409898a7248241cf954").unwrap();
    let exp = u2048::from_hex("4f71c2191f492423bcaf977100129923d6e4f306983372917c186977202de9057fc7ac5a881566ef1f9887f36fbe3e28881eafb555927e21c094ba88705a5ef6b371f61ae4f5ca1a7e577a374a93ef10955b70a222465cbb0c045d50e7ededa07d72abb37d828604f2709d7f949b07a3d0f7ddc5e5d46c4131558141a094df15e58f0ed1a677fae88b7e8c0123c34e01528ccbdb9e42a6341925f9ca258cb4169222195aedc59c98e9678166dc764c1804dd4dd9a781842f2c842ee2ab02e15ff2f0033c6be878909662a762671333f1d63916931630d683a08e347e9d28ee3a9b21386488bd78b1a6c17b1cf82dd5785eb3ea15f79bb043f87cb54658760e1").unwrap();
    let mod_ = u2048::from_hex("544abda20a6ba3bf045b76565ec6940959a8712d5f08d4c05e128637035ea2150ebe2b2dbdafe3e6f5fc405f74af1f7e518735f6461ffa618a6361e61deb2ccc73af6744d8618ac2a9a2ccc4b404e17b53a30df2e1d46dafdd3fee50fd4f3bc638a4e4241cbd0174e93ea1cdbe64fa8640a30ebecbe34b9627aec719a33070a5e33ad1f2082bd8ae8d82fd7f589bfa27a325a74156251a3472f350f192858c3e8701e7136c0b358ef070b456380402867e0454f505cbb997e54f8c754ef75f1d510407eb65c5909fadbcbeafcdbd8a03b04360caecbbfd06603a6ef542201a8e6badedd46974023be5de6f1b0d85af8d2f1c2320c0ad8cbb33cd24393dc9c397").unwrap();
    let expected = u2048::from_hex("4f1ef2611a78018da87b5feba620b98afa9ae50c21175e0d1c5b940e45220c5900573602889ca2c075454efe9a22e4438a21de321ed55aecac4412400dc1a86ce3da74ef1b7fbcbae4d9b345d26aef87344d3465f445bf2e38d68bc80748a610695b2a9465a1e6d9d5ff04209366bb1175a07f786037de573463c2145aa1386dee1e2a4dec8aba4ddb135d2005afa59a3761d5e94fbcae3cf5617d089bd18a422f809054ad019a90ccae4a50d4895814026dab60015fc8a2147061ec97eb60cb41d7b60c993a98c0644f7391b2223edd354ad6e2b84518a842b466feceb1558cbb9212563ded6c302e4ee6d8cf4669f3f8b91cd353993a07fea0dd4fa0ec0dcf").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Encryption
    {let base = u2048::from_hex("584b449a133efe40f0d6df11422bd778822d85004f898b73080b27f43210641a3b01771563969381b405a017f1ce2fca91abbbc07caf7e4b76b8d60c790d33aa47bc2764aba9ea8b1bf2404882abae20bf6ce6c754ffae1be3fccd83f58891cf088ea7096ad7603dff2c12045ec775e254632db97df4cbdc75b63fb14f625c6beed29d9e4cc7e4cd373aaf48ae36e1f00b1f7d06cc9daf4ececea6a324109489b3dabc5750e98f31877b973f4064e9e8c8f83ccb7f3f3c3d7ed7dffadfb7186cdeaf42ef4ca522e1af22764fc123330d022db7c734c95e3e7ec2c37fbcbdbea10921df60f71f57680f6dd7890975917c61be7b7e34cd8780fd7112383d8b305").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("fc7e16cf844db0e598606f40a61dd102fe4d455737142053edff089630f732477adedccee0a6e47b7304a1bb4f89c0f2ec5567120bf497cedf070d0b180756fb14b90cae11afca7d4d9a10dece2beb81e9e594ffd1723e3bc160e06e03ad83d24060e05a4d2c956ee743cad87e6f433fa097362d2cd1abf7d38b9c8a5b8981e4859002330e44cd0b82266b41744d2b9864758ed03bc6a2da21c8ea68e6929bdff04494bbaf6cdfee7a4aef71bdf8cc9c8a5a2ab4cb6af3c33b90c6e1e0b75296d29079d70aeadb8037f7dfb2de544fd3b9512b5169c97dc5d92a91fb028db5cb77df11a7e5290552ea6a166a37c99c7fb097f48b9875604f7fb967850cc60aab").unwrap();
    let expected = u2048::from_hex("d9d3e744e0dbe1e677d75075922691f29b34b1738696f72929b2fd373d3ea983e6b675d16d8d1e773dbd49dff6c89389c6ca9ade3b92e87e657712d9a11fa6c694f8b215fb0c3d1474f30db1d3323a00924f2ffcff90d8fb92ab434040f879b834cfaf385d2b393d08217d94d272199eeb48394c370851f3caed52a0629cb45509a6c9996664d6b48005e480e31e9f3de6eb41d28e2b51773df44fe7c06c8e1636c6fec0d11d12f156454d603c110bd25096261edff5fe7fbbfee2ac3edc51d418100be2edeca6376c0a201404470e55f3d51d783ca342247b7f246c9218d1469ce7596f85c571e999843ecc9bfd0ba91b798192fcf599ba0dc22b4f93af3d11").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("d9d3e744e0dbe1e677d75075922691f29b34b1738696f72929b2fd373d3ea983e6b675d16d8d1e773dbd49dff6c89389c6ca9ade3b92e87e657712d9a11fa6c694f8b215fb0c3d1474f30db1d3323a00924f2ffcff90d8fb92ab434040f879b834cfaf385d2b393d08217d94d272199eeb48394c370851f3caed52a0629cb45509a6c9996664d6b48005e480e31e9f3de6eb41d28e2b51773df44fe7c06c8e1636c6fec0d11d12f156454d603c110bd25096261edff5fe7fbbfee2ac3edc51d418100be2edeca6376c0a201404470e55f3d51d783ca342247b7f246c9218d1469ce7596f85c571e999843ecc9bfd0ba91b798192fcf599ba0dc22b4f93af3d11").unwrap();
    let exp = u2048::from_hex("9bbae936ca28b642908914bfe5b53384dfc9a8f59c9dbd3d5c3d407e8cbf95334bdac935e539b512af0e319d3b4c2b7053c918eea33bbe50c9c8ff87d2cf8971088704b06d6d8f3c04465216c49d877ec9548b61d29233f031dac93c66e84e6064ca0641014dce47be3c01e5d0405a54942804dce2c284de85e0f0dc25392ff3190de495d02ee9e8a554fa6bede24c14daacf2a632afdad03407574492e8af5335b95c9b48c9cefb7035b453afd9238b2e65f4d8bdcfff1e59322f2aecf4937ad66a40bf384ac15b23288cb7d2cf882b1a6a085ee16b21696fdae56bfced4e8af245c1381fe3079bd779813798387ba4e573e5a36b940878fed284953b14c61").unwrap();
    let mod_ = u2048::from_hex("fc7e16cf844db0e598606f40a61dd102fe4d455737142053edff089630f732477adedccee0a6e47b7304a1bb4f89c0f2ec5567120bf497cedf070d0b180756fb14b90cae11afca7d4d9a10dece2beb81e9e594ffd1723e3bc160e06e03ad83d24060e05a4d2c956ee743cad87e6f433fa097362d2cd1abf7d38b9c8a5b8981e4859002330e44cd0b82266b41744d2b9864758ed03bc6a2da21c8ea68e6929bdff04494bbaf6cdfee7a4aef71bdf8cc9c8a5a2ab4cb6af3c33b90c6e1e0b75296d29079d70aeadb8037f7dfb2de544fd3b9512b5169c97dc5d92a91fb028db5cb77df11a7e5290552ea6a166a37c99c7fb097f48b9875604f7fb967850cc60aab").unwrap();
    let expected = u2048::from_hex("584b449a133efe40f0d6df11422bd778822d85004f898b73080b27f43210641a3b01771563969381b405a017f1ce2fca91abbbc07caf7e4b76b8d60c790d33aa47bc2764aba9ea8b1bf2404882abae20bf6ce6c754ffae1be3fccd83f58891cf088ea7096ad7603dff2c12045ec775e254632db97df4cbdc75b63fb14f625c6beed29d9e4cc7e4cd373aaf48ae36e1f00b1f7d06cc9daf4ececea6a324109489b3dabc5750e98f31877b973f4064e9e8c8f83ccb7f3f3c3d7ed7dffadfb7186cdeaf42ef4ca522e1af22764fc123330d022db7c734c95e3e7ec2c37fbcbdbea10921df60f71f57680f6dd7890975917c61be7b7e34cd8780fd7112383d8b305").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}

    // Encryption
    {let base = u2048::from_hex("1ba25529942046d8eb1ada08ebdffdbd1ccf1b9782ca84ca34c5f27ee36b84e79d17777d169f6afd2133c717363fbc36375e873ce89754c00b187886b83ca655c47a4d88ad7f0de8c84a0b106f15debadbd96a0f1a4c30400e9b235ff58e0a2feb40f21fff3528fbe2b60627fb602ada0a6850b2494f00700eec06705abade92d7ff5707932961149c25d8c86aa709c17561b199a85df8d7a136faa68cbf6727475b7ea02e91fddbc5b614496798ac4a56a34e34369c35cf1b1174e6371b3c10e7ef7fde27524fe6bfcb0173b064b3580130554835db39a2c49a2631b8363e6d185af2da41c54d3ecdc250ef1d3b094b87e30e6d960609245f2cdaf2cd80ac23").unwrap();
    let exp = u2048::from_hex("10001").unwrap();
    let mod_ = u2048::from_hex("43a0d90dd163ad51ae89338dd8eb17136d4837ad3966d2b14c4e4daa4848bc325bac46b3f1c0790ee56b067d778ce9f71ae4998851763092b4a9570fbcbf41bd58723421a80b9e286c65b1cbbaceea7b491b4d4188bfcdeca77757d4838bfa62d100c4d4cd4ad59c794039bf95547dc799e1b59051cf6ab52beb6714c443b466c63f086cd405eaf5f085c7a32513b20062725cc6095865a81d476fa659d29390834863838298d1d3f42f0bcecf206fa78d30b591266a87486dc0714032252195b732a86d6ac33adbdd70983d32915f8fb7e9b653691f648ceec9b412ba83410420e9bc0eebc8f3def604e43bcd22af3ad5324c770dcb6ecd5c7cfcda687920e9").unwrap();
    let expected = u2048::from_hex("112b994663f588069b38ac9aebddd65dab988e69136c71ae2036c6cc9f4a3685d841268215afbd0ce4779514c1d4a4706127f798286adcf0ccd688c8152e95d5083d64abf2d90ac1324172a36818037ef8ce162b462e1723721acb6609f00bae50d3c99cbc80cf79fde862a18fbb1303c1363320f5c7995cadc2d7d82d72358d1366386263d7f78269c52e01a19d622cadb99ff43c5667efbccf6d74a8804ed94451d073ffe3e82493a9381304199bc598f4037f18d3ee31a797a52ab1cf8e5f8bb42c61aef8250cc5494d05444a90f7fda6b29824d6be7f87b0b14615afe2eea9603043831e841dcae353e82219c36311e5f932258a0fcf8d42249d6c2ccd48").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
    // Decryption
    {let base = u2048::from_hex("112b994663f588069b38ac9aebddd65dab988e69136c71ae2036c6cc9f4a3685d841268215afbd0ce4779514c1d4a4706127f798286adcf0ccd688c8152e95d5083d64abf2d90ac1324172a36818037ef8ce162b462e1723721acb6609f00bae50d3c99cbc80cf79fde862a18fbb1303c1363320f5c7995cadc2d7d82d72358d1366386263d7f78269c52e01a19d622cadb99ff43c5667efbccf6d74a8804ed94451d073ffe3e82493a9381304199bc598f4037f18d3ee31a797a52ab1cf8e5f8bb42c61aef8250cc5494d05444a90f7fda6b29824d6be7f87b0b14615afe2eea9603043831e841dcae353e82219c36311e5f932258a0fcf8d42249d6c2ccd48").unwrap();
    let exp = u2048::from_hex("20a64f2434ab02ca249168aa5ac764e4a425f17b57f324552499c93524a0b8fb36f6fd4b72b391be77542c55f699b97aeb28e256c5bd61c5f222af3d91ca645a9d90c54a5a6f017452a0e62d8d8ac7f9ad59d8fa82a2d73021c9a4459d1cbf4d65ca113d0bbfcd5135d8a408b27790220550caef5a0fe15c864fa7fc86a4893b6927ecb7489090533af4181a1f2e58dd2c1108198caf34b2029bd3e6b1afe45998b1c40218df5462a4007eaa685d5873dd0d49344b5629818d629c1e1261adddc454d2cd222f3485cc261597d7cfd799c5406c33250febe80556c74267f78c564e8ba812ee8108c8ae2ae812c49283f0fc7e432b9f9b97cab97ebf0aa6dce5f").unwrap();
    let mod_ = u2048::from_hex("43a0d90dd163ad51ae89338dd8eb17136d4837ad3966d2b14c4e4daa4848bc325bac46b3f1c0790ee56b067d778ce9f71ae4998851763092b4a9570fbcbf41bd58723421a80b9e286c65b1cbbaceea7b491b4d4188bfcdeca77757d4838bfa62d100c4d4cd4ad59c794039bf95547dc799e1b59051cf6ab52beb6714c443b466c63f086cd405eaf5f085c7a32513b20062725cc6095865a81d476fa659d29390834863838298d1d3f42f0bcecf206fa78d30b591266a87486dc0714032252195b732a86d6ac33adbdd70983d32915f8fb7e9b653691f648ceec9b412ba83410420e9bc0eebc8f3def604e43bcd22af3ad5324c770dcb6ecd5c7cfcda687920e9").unwrap();
    let expected = u2048::from_hex("1ba25529942046d8eb1ada08ebdffdbd1ccf1b9782ca84ca34c5f27ee36b84e79d17777d169f6afd2133c717363fbc36375e873ce89754c00b187886b83ca655c47a4d88ad7f0de8c84a0b106f15debadbd96a0f1a4c30400e9b235ff58e0a2feb40f21fff3528fbe2b60627fb602ada0a6850b2494f00700eec06705abade92d7ff5707932961149c25d8c86aa709c17561b199a85df8d7a136faa68cbf6727475b7ea02e91fddbc5b614496798ac4a56a34e34369c35cf1b1174e6371b3c10e7ef7fde27524fe6bfcb0173b064b3580130554835db39a2c49a2631b8363e6d185af2da41c54d3ecdc250ef1d3b094b87e30e6d960609245f2cdaf2cd80ac23").unwrap();
    let out = crypter(&base, &exp, &mod_);
    assert_eq!(expected, out);}
}
